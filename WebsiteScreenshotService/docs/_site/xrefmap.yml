### YamlMime:XRefMap
sorted: true
references:
- uid: WebsiteScreenshotService.Controllers
  name: WebsiteScreenshotService.Controllers
  href: api/WebsiteScreenshotService.Controllers.html
  commentId: N:WebsiteScreenshotService.Controllers
  fullName: WebsiteScreenshotService.Controllers
  nameWithType: WebsiteScreenshotService.Controllers
- uid: WebsiteScreenshotService.Controllers.Examples.Indentity
  name: WebsiteScreenshotService.Controllers.Examples.Indentity
  href: api/WebsiteScreenshotService.Controllers.Examples.Indentity.html
  commentId: N:WebsiteScreenshotService.Controllers.Examples.Indentity
  fullName: WebsiteScreenshotService.Controllers.Examples.Indentity
  nameWithType: WebsiteScreenshotService.Controllers.Examples.Indentity
- uid: WebsiteScreenshotService.Controllers.Examples.Indentity.LoginResponseExample
  name: LoginResponseExample
  href: api/WebsiteScreenshotService.Controllers.Examples.Indentity.LoginResponseExample.html
  commentId: T:WebsiteScreenshotService.Controllers.Examples.Indentity.LoginResponseExample
  fullName: WebsiteScreenshotService.Controllers.Examples.Indentity.LoginResponseExample
  nameWithType: LoginResponseExample
- uid: WebsiteScreenshotService.Controllers.Examples.Indentity.LoginResponseExample.GetExamples
  name: GetExamples()
  href: api/WebsiteScreenshotService.Controllers.Examples.Indentity.LoginResponseExample.html#WebsiteScreenshotService_Controllers_Examples_Indentity_LoginResponseExample_GetExamples
  commentId: M:WebsiteScreenshotService.Controllers.Examples.Indentity.LoginResponseExample.GetExamples
  fullName: WebsiteScreenshotService.Controllers.Examples.Indentity.LoginResponseExample.GetExamples()
  nameWithType: LoginResponseExample.GetExamples()
- uid: WebsiteScreenshotService.Controllers.Examples.Indentity.LoginResponseExample.GetExamples*
  name: GetExamples
  href: api/WebsiteScreenshotService.Controllers.Examples.Indentity.LoginResponseExample.html#WebsiteScreenshotService_Controllers_Examples_Indentity_LoginResponseExample_GetExamples_
  commentId: Overload:WebsiteScreenshotService.Controllers.Examples.Indentity.LoginResponseExample.GetExamples
  isSpec: "True"
  fullName: WebsiteScreenshotService.Controllers.Examples.Indentity.LoginResponseExample.GetExamples
  nameWithType: LoginResponseExample.GetExamples
- uid: WebsiteScreenshotService.Controllers.Examples.Indentity.MakeScreenshotResponseExample
  name: MakeScreenshotResponseExample
  href: api/WebsiteScreenshotService.Controllers.Examples.Indentity.MakeScreenshotResponseExample.html
  commentId: T:WebsiteScreenshotService.Controllers.Examples.Indentity.MakeScreenshotResponseExample
  fullName: WebsiteScreenshotService.Controllers.Examples.Indentity.MakeScreenshotResponseExample
  nameWithType: MakeScreenshotResponseExample
- uid: WebsiteScreenshotService.Controllers.Examples.Indentity.MakeScreenshotResponseExample.GetExamples
  name: GetExamples()
  href: api/WebsiteScreenshotService.Controllers.Examples.Indentity.MakeScreenshotResponseExample.html#WebsiteScreenshotService_Controllers_Examples_Indentity_MakeScreenshotResponseExample_GetExamples
  commentId: M:WebsiteScreenshotService.Controllers.Examples.Indentity.MakeScreenshotResponseExample.GetExamples
  fullName: WebsiteScreenshotService.Controllers.Examples.Indentity.MakeScreenshotResponseExample.GetExamples()
  nameWithType: MakeScreenshotResponseExample.GetExamples()
- uid: WebsiteScreenshotService.Controllers.Examples.Indentity.MakeScreenshotResponseExample.GetExamples*
  name: GetExamples
  href: api/WebsiteScreenshotService.Controllers.Examples.Indentity.MakeScreenshotResponseExample.html#WebsiteScreenshotService_Controllers_Examples_Indentity_MakeScreenshotResponseExample_GetExamples_
  commentId: Overload:WebsiteScreenshotService.Controllers.Examples.Indentity.MakeScreenshotResponseExample.GetExamples
  isSpec: "True"
  fullName: WebsiteScreenshotService.Controllers.Examples.Indentity.MakeScreenshotResponseExample.GetExamples
  nameWithType: MakeScreenshotResponseExample.GetExamples
- uid: WebsiteScreenshotService.Controllers.Examples.Indentity.RegisterResponseExample
  name: RegisterResponseExample
  href: api/WebsiteScreenshotService.Controllers.Examples.Indentity.RegisterResponseExample.html
  commentId: T:WebsiteScreenshotService.Controllers.Examples.Indentity.RegisterResponseExample
  fullName: WebsiteScreenshotService.Controllers.Examples.Indentity.RegisterResponseExample
  nameWithType: RegisterResponseExample
- uid: WebsiteScreenshotService.Controllers.Examples.Indentity.RegisterResponseExample.GetExamples
  name: GetExamples()
  href: api/WebsiteScreenshotService.Controllers.Examples.Indentity.RegisterResponseExample.html#WebsiteScreenshotService_Controllers_Examples_Indentity_RegisterResponseExample_GetExamples
  commentId: M:WebsiteScreenshotService.Controllers.Examples.Indentity.RegisterResponseExample.GetExamples
  fullName: WebsiteScreenshotService.Controllers.Examples.Indentity.RegisterResponseExample.GetExamples()
  nameWithType: RegisterResponseExample.GetExamples()
- uid: WebsiteScreenshotService.Controllers.Examples.Indentity.RegisterResponseExample.GetExamples*
  name: GetExamples
  href: api/WebsiteScreenshotService.Controllers.Examples.Indentity.RegisterResponseExample.html#WebsiteScreenshotService_Controllers_Examples_Indentity_RegisterResponseExample_GetExamples_
  commentId: Overload:WebsiteScreenshotService.Controllers.Examples.Indentity.RegisterResponseExample.GetExamples
  isSpec: "True"
  fullName: WebsiteScreenshotService.Controllers.Examples.Indentity.RegisterResponseExample.GetExamples
  nameWithType: RegisterResponseExample.GetExamples
- uid: WebsiteScreenshotService.Controllers.IdentityController
  name: IdentityController
  href: api/WebsiteScreenshotService.Controllers.IdentityController.html
  commentId: T:WebsiteScreenshotService.Controllers.IdentityController
  fullName: WebsiteScreenshotService.Controllers.IdentityController
  nameWithType: IdentityController
- uid: WebsiteScreenshotService.Controllers.IdentityController.#ctor(WebsiteScreenshotService.Repositories.IUserRepository)
  name: IdentityController(IUserRepository)
  href: api/WebsiteScreenshotService.Controllers.IdentityController.html#WebsiteScreenshotService_Controllers_IdentityController__ctor_WebsiteScreenshotService_Repositories_IUserRepository_
  commentId: M:WebsiteScreenshotService.Controllers.IdentityController.#ctor(WebsiteScreenshotService.Repositories.IUserRepository)
  name.vb: New(IUserRepository)
  fullName: WebsiteScreenshotService.Controllers.IdentityController.IdentityController(WebsiteScreenshotService.Repositories.IUserRepository)
  fullName.vb: WebsiteScreenshotService.Controllers.IdentityController.New(WebsiteScreenshotService.Repositories.IUserRepository)
  nameWithType: IdentityController.IdentityController(IUserRepository)
  nameWithType.vb: IdentityController.New(IUserRepository)
- uid: WebsiteScreenshotService.Controllers.IdentityController.#ctor*
  name: IdentityController
  href: api/WebsiteScreenshotService.Controllers.IdentityController.html#WebsiteScreenshotService_Controllers_IdentityController__ctor_
  commentId: Overload:WebsiteScreenshotService.Controllers.IdentityController.#ctor
  isSpec: "True"
  name.vb: New
  fullName: WebsiteScreenshotService.Controllers.IdentityController.IdentityController
  fullName.vb: WebsiteScreenshotService.Controllers.IdentityController.New
  nameWithType: IdentityController.IdentityController
  nameWithType.vb: IdentityController.New
- uid: WebsiteScreenshotService.Controllers.IdentityController.Login(WebsiteScreenshotService.Model.LoginModel)
  name: Login(LoginModel)
  href: api/WebsiteScreenshotService.Controllers.IdentityController.html#WebsiteScreenshotService_Controllers_IdentityController_Login_WebsiteScreenshotService_Model_LoginModel_
  commentId: M:WebsiteScreenshotService.Controllers.IdentityController.Login(WebsiteScreenshotService.Model.LoginModel)
  fullName: WebsiteScreenshotService.Controllers.IdentityController.Login(WebsiteScreenshotService.Model.LoginModel)
  nameWithType: IdentityController.Login(LoginModel)
- uid: WebsiteScreenshotService.Controllers.IdentityController.Login*
  name: Login
  href: api/WebsiteScreenshotService.Controllers.IdentityController.html#WebsiteScreenshotService_Controllers_IdentityController_Login_
  commentId: Overload:WebsiteScreenshotService.Controllers.IdentityController.Login
  isSpec: "True"
  fullName: WebsiteScreenshotService.Controllers.IdentityController.Login
  nameWithType: IdentityController.Login
- uid: WebsiteScreenshotService.Controllers.IdentityController.Logout
  name: Logout()
  href: api/WebsiteScreenshotService.Controllers.IdentityController.html#WebsiteScreenshotService_Controllers_IdentityController_Logout
  commentId: M:WebsiteScreenshotService.Controllers.IdentityController.Logout
  fullName: WebsiteScreenshotService.Controllers.IdentityController.Logout()
  nameWithType: IdentityController.Logout()
- uid: WebsiteScreenshotService.Controllers.IdentityController.Logout*
  name: Logout
  href: api/WebsiteScreenshotService.Controllers.IdentityController.html#WebsiteScreenshotService_Controllers_IdentityController_Logout_
  commentId: Overload:WebsiteScreenshotService.Controllers.IdentityController.Logout
  isSpec: "True"
  fullName: WebsiteScreenshotService.Controllers.IdentityController.Logout
  nameWithType: IdentityController.Logout
- uid: WebsiteScreenshotService.Controllers.IdentityController.Register(WebsiteScreenshotService.Model.RegisterModel)
  name: Register(RegisterModel)
  href: api/WebsiteScreenshotService.Controllers.IdentityController.html#WebsiteScreenshotService_Controllers_IdentityController_Register_WebsiteScreenshotService_Model_RegisterModel_
  commentId: M:WebsiteScreenshotService.Controllers.IdentityController.Register(WebsiteScreenshotService.Model.RegisterModel)
  fullName: WebsiteScreenshotService.Controllers.IdentityController.Register(WebsiteScreenshotService.Model.RegisterModel)
  nameWithType: IdentityController.Register(RegisterModel)
- uid: WebsiteScreenshotService.Controllers.IdentityController.Register*
  name: Register
  href: api/WebsiteScreenshotService.Controllers.IdentityController.html#WebsiteScreenshotService_Controllers_IdentityController_Register_
  commentId: Overload:WebsiteScreenshotService.Controllers.IdentityController.Register
  isSpec: "True"
  fullName: WebsiteScreenshotService.Controllers.IdentityController.Register
  nameWithType: IdentityController.Register
- uid: WebsiteScreenshotService.Controllers.ScreenshotContoller
  name: ScreenshotContoller
  href: api/WebsiteScreenshotService.Controllers.ScreenshotContoller.html
  commentId: T:WebsiteScreenshotService.Controllers.ScreenshotContoller
  fullName: WebsiteScreenshotService.Controllers.ScreenshotContoller
  nameWithType: ScreenshotContoller
- uid: WebsiteScreenshotService.Controllers.ScreenshotContoller.#ctor(WebsiteScreenshotService.Repositories.IUserRepository,WebsiteScreenshotService.Services.IBrowserService)
  name: ScreenshotContoller(IUserRepository, IBrowserService)
  href: api/WebsiteScreenshotService.Controllers.ScreenshotContoller.html#WebsiteScreenshotService_Controllers_ScreenshotContoller__ctor_WebsiteScreenshotService_Repositories_IUserRepository_WebsiteScreenshotService_Services_IBrowserService_
  commentId: M:WebsiteScreenshotService.Controllers.ScreenshotContoller.#ctor(WebsiteScreenshotService.Repositories.IUserRepository,WebsiteScreenshotService.Services.IBrowserService)
  name.vb: New(IUserRepository, IBrowserService)
  fullName: WebsiteScreenshotService.Controllers.ScreenshotContoller.ScreenshotContoller(WebsiteScreenshotService.Repositories.IUserRepository, WebsiteScreenshotService.Services.IBrowserService)
  fullName.vb: WebsiteScreenshotService.Controllers.ScreenshotContoller.New(WebsiteScreenshotService.Repositories.IUserRepository, WebsiteScreenshotService.Services.IBrowserService)
  nameWithType: ScreenshotContoller.ScreenshotContoller(IUserRepository, IBrowserService)
  nameWithType.vb: ScreenshotContoller.New(IUserRepository, IBrowserService)
- uid: WebsiteScreenshotService.Controllers.ScreenshotContoller.#ctor*
  name: ScreenshotContoller
  href: api/WebsiteScreenshotService.Controllers.ScreenshotContoller.html#WebsiteScreenshotService_Controllers_ScreenshotContoller__ctor_
  commentId: Overload:WebsiteScreenshotService.Controllers.ScreenshotContoller.#ctor
  isSpec: "True"
  name.vb: New
  fullName: WebsiteScreenshotService.Controllers.ScreenshotContoller.ScreenshotContoller
  fullName.vb: WebsiteScreenshotService.Controllers.ScreenshotContoller.New
  nameWithType: ScreenshotContoller.ScreenshotContoller
  nameWithType.vb: ScreenshotContoller.New
- uid: WebsiteScreenshotService.Controllers.ScreenshotContoller.MakeScreenshot(WebsiteScreenshotService.Model.ScreenshotOptionsModel)
  name: MakeScreenshot(ScreenshotOptionsModel)
  href: api/WebsiteScreenshotService.Controllers.ScreenshotContoller.html#WebsiteScreenshotService_Controllers_ScreenshotContoller_MakeScreenshot_WebsiteScreenshotService_Model_ScreenshotOptionsModel_
  commentId: M:WebsiteScreenshotService.Controllers.ScreenshotContoller.MakeScreenshot(WebsiteScreenshotService.Model.ScreenshotOptionsModel)
  fullName: WebsiteScreenshotService.Controllers.ScreenshotContoller.MakeScreenshot(WebsiteScreenshotService.Model.ScreenshotOptionsModel)
  nameWithType: ScreenshotContoller.MakeScreenshot(ScreenshotOptionsModel)
- uid: WebsiteScreenshotService.Controllers.ScreenshotContoller.MakeScreenshot*
  name: MakeScreenshot
  href: api/WebsiteScreenshotService.Controllers.ScreenshotContoller.html#WebsiteScreenshotService_Controllers_ScreenshotContoller_MakeScreenshot_
  commentId: Overload:WebsiteScreenshotService.Controllers.ScreenshotContoller.MakeScreenshot
  isSpec: "True"
  fullName: WebsiteScreenshotService.Controllers.ScreenshotContoller.MakeScreenshot
  nameWithType: ScreenshotContoller.MakeScreenshot
- uid: WebsiteScreenshotService.Entities
  name: WebsiteScreenshotService.Entities
  href: api/WebsiteScreenshotService.Entities.html
  commentId: N:WebsiteScreenshotService.Entities
  fullName: WebsiteScreenshotService.Entities
  nameWithType: WebsiteScreenshotService.Entities
- uid: WebsiteScreenshotService.Entities.SubscriptionPlan
  name: SubscriptionPlan
  href: api/WebsiteScreenshotService.Entities.SubscriptionPlan.html
  commentId: T:WebsiteScreenshotService.Entities.SubscriptionPlan
  fullName: WebsiteScreenshotService.Entities.SubscriptionPlan
  nameWithType: SubscriptionPlan
- uid: WebsiteScreenshotService.Entities.SubscriptionPlan.#ctor(WebsiteScreenshotService.Entities.SubscriptionType,System.Int32)
  name: SubscriptionPlan(SubscriptionType, int)
  href: api/WebsiteScreenshotService.Entities.SubscriptionPlan.html#WebsiteScreenshotService_Entities_SubscriptionPlan__ctor_WebsiteScreenshotService_Entities_SubscriptionType_System_Int32_
  commentId: M:WebsiteScreenshotService.Entities.SubscriptionPlan.#ctor(WebsiteScreenshotService.Entities.SubscriptionType,System.Int32)
  name.vb: New(SubscriptionType, Integer)
  fullName: WebsiteScreenshotService.Entities.SubscriptionPlan.SubscriptionPlan(WebsiteScreenshotService.Entities.SubscriptionType, int)
  fullName.vb: WebsiteScreenshotService.Entities.SubscriptionPlan.New(WebsiteScreenshotService.Entities.SubscriptionType, Integer)
  nameWithType: SubscriptionPlan.SubscriptionPlan(SubscriptionType, int)
  nameWithType.vb: SubscriptionPlan.New(SubscriptionType, Integer)
- uid: WebsiteScreenshotService.Entities.SubscriptionPlan.#ctor*
  name: SubscriptionPlan
  href: api/WebsiteScreenshotService.Entities.SubscriptionPlan.html#WebsiteScreenshotService_Entities_SubscriptionPlan__ctor_
  commentId: Overload:WebsiteScreenshotService.Entities.SubscriptionPlan.#ctor
  isSpec: "True"
  name.vb: New
  fullName: WebsiteScreenshotService.Entities.SubscriptionPlan.SubscriptionPlan
  fullName.vb: WebsiteScreenshotService.Entities.SubscriptionPlan.New
  nameWithType: SubscriptionPlan.SubscriptionPlan
  nameWithType.vb: SubscriptionPlan.New
- uid: WebsiteScreenshotService.Entities.SubscriptionPlan.CanMakeScreenshot
  name: CanMakeScreenshot()
  href: api/WebsiteScreenshotService.Entities.SubscriptionPlan.html#WebsiteScreenshotService_Entities_SubscriptionPlan_CanMakeScreenshot
  commentId: M:WebsiteScreenshotService.Entities.SubscriptionPlan.CanMakeScreenshot
  fullName: WebsiteScreenshotService.Entities.SubscriptionPlan.CanMakeScreenshot()
  nameWithType: SubscriptionPlan.CanMakeScreenshot()
- uid: WebsiteScreenshotService.Entities.SubscriptionPlan.CanMakeScreenshot*
  name: CanMakeScreenshot
  href: api/WebsiteScreenshotService.Entities.SubscriptionPlan.html#WebsiteScreenshotService_Entities_SubscriptionPlan_CanMakeScreenshot_
  commentId: Overload:WebsiteScreenshotService.Entities.SubscriptionPlan.CanMakeScreenshot
  isSpec: "True"
  fullName: WebsiteScreenshotService.Entities.SubscriptionPlan.CanMakeScreenshot
  nameWithType: SubscriptionPlan.CanMakeScreenshot
- uid: WebsiteScreenshotService.Entities.SubscriptionPlan.GetRegularSubscriptionPlan
  name: GetRegularSubscriptionPlan()
  href: api/WebsiteScreenshotService.Entities.SubscriptionPlan.html#WebsiteScreenshotService_Entities_SubscriptionPlan_GetRegularSubscriptionPlan
  commentId: M:WebsiteScreenshotService.Entities.SubscriptionPlan.GetRegularSubscriptionPlan
  fullName: WebsiteScreenshotService.Entities.SubscriptionPlan.GetRegularSubscriptionPlan()
  nameWithType: SubscriptionPlan.GetRegularSubscriptionPlan()
- uid: WebsiteScreenshotService.Entities.SubscriptionPlan.GetRegularSubscriptionPlan*
  name: GetRegularSubscriptionPlan
  href: api/WebsiteScreenshotService.Entities.SubscriptionPlan.html#WebsiteScreenshotService_Entities_SubscriptionPlan_GetRegularSubscriptionPlan_
  commentId: Overload:WebsiteScreenshotService.Entities.SubscriptionPlan.GetRegularSubscriptionPlan
  isSpec: "True"
  fullName: WebsiteScreenshotService.Entities.SubscriptionPlan.GetRegularSubscriptionPlan
  nameWithType: SubscriptionPlan.GetRegularSubscriptionPlan
- uid: WebsiteScreenshotService.Entities.SubscriptionPlan.ScreenshotLeft
  name: ScreenshotLeft
  href: api/WebsiteScreenshotService.Entities.SubscriptionPlan.html#WebsiteScreenshotService_Entities_SubscriptionPlan_ScreenshotLeft
  commentId: P:WebsiteScreenshotService.Entities.SubscriptionPlan.ScreenshotLeft
  fullName: WebsiteScreenshotService.Entities.SubscriptionPlan.ScreenshotLeft
  nameWithType: SubscriptionPlan.ScreenshotLeft
- uid: WebsiteScreenshotService.Entities.SubscriptionPlan.ScreenshotLeft*
  name: ScreenshotLeft
  href: api/WebsiteScreenshotService.Entities.SubscriptionPlan.html#WebsiteScreenshotService_Entities_SubscriptionPlan_ScreenshotLeft_
  commentId: Overload:WebsiteScreenshotService.Entities.SubscriptionPlan.ScreenshotLeft
  isSpec: "True"
  fullName: WebsiteScreenshotService.Entities.SubscriptionPlan.ScreenshotLeft
  nameWithType: SubscriptionPlan.ScreenshotLeft
- uid: WebsiteScreenshotService.Entities.SubscriptionPlan.ScreenshotWasMade
  name: ScreenshotWasMade()
  href: api/WebsiteScreenshotService.Entities.SubscriptionPlan.html#WebsiteScreenshotService_Entities_SubscriptionPlan_ScreenshotWasMade
  commentId: M:WebsiteScreenshotService.Entities.SubscriptionPlan.ScreenshotWasMade
  fullName: WebsiteScreenshotService.Entities.SubscriptionPlan.ScreenshotWasMade()
  nameWithType: SubscriptionPlan.ScreenshotWasMade()
- uid: WebsiteScreenshotService.Entities.SubscriptionPlan.ScreenshotWasMade*
  name: ScreenshotWasMade
  href: api/WebsiteScreenshotService.Entities.SubscriptionPlan.html#WebsiteScreenshotService_Entities_SubscriptionPlan_ScreenshotWasMade_
  commentId: Overload:WebsiteScreenshotService.Entities.SubscriptionPlan.ScreenshotWasMade
  isSpec: "True"
  fullName: WebsiteScreenshotService.Entities.SubscriptionPlan.ScreenshotWasMade
  nameWithType: SubscriptionPlan.ScreenshotWasMade
- uid: WebsiteScreenshotService.Entities.SubscriptionPlan.Type
  name: Type
  href: api/WebsiteScreenshotService.Entities.SubscriptionPlan.html#WebsiteScreenshotService_Entities_SubscriptionPlan_Type
  commentId: P:WebsiteScreenshotService.Entities.SubscriptionPlan.Type
  fullName: WebsiteScreenshotService.Entities.SubscriptionPlan.Type
  nameWithType: SubscriptionPlan.Type
- uid: WebsiteScreenshotService.Entities.SubscriptionPlan.Type*
  name: Type
  href: api/WebsiteScreenshotService.Entities.SubscriptionPlan.html#WebsiteScreenshotService_Entities_SubscriptionPlan_Type_
  commentId: Overload:WebsiteScreenshotService.Entities.SubscriptionPlan.Type
  isSpec: "True"
  fullName: WebsiteScreenshotService.Entities.SubscriptionPlan.Type
  nameWithType: SubscriptionPlan.Type
- uid: WebsiteScreenshotService.Entities.SubscriptionType
  name: SubscriptionType
  href: api/WebsiteScreenshotService.Entities.SubscriptionType.html
  commentId: T:WebsiteScreenshotService.Entities.SubscriptionType
  fullName: WebsiteScreenshotService.Entities.SubscriptionType
  nameWithType: SubscriptionType
- uid: WebsiteScreenshotService.Entities.SubscriptionType.Regular
  name: Regular
  href: api/WebsiteScreenshotService.Entities.SubscriptionType.html#WebsiteScreenshotService_Entities_SubscriptionType_Regular
  commentId: F:WebsiteScreenshotService.Entities.SubscriptionType.Regular
  fullName: WebsiteScreenshotService.Entities.SubscriptionType.Regular
  nameWithType: SubscriptionType.Regular
- uid: WebsiteScreenshotService.Entities.User
  name: User
  href: api/WebsiteScreenshotService.Entities.User.html
  commentId: T:WebsiteScreenshotService.Entities.User
  fullName: WebsiteScreenshotService.Entities.User
  nameWithType: User
- uid: WebsiteScreenshotService.Entities.User.#ctor(System.Guid,System.String,System.String,System.String,System.String,WebsiteScreenshotService.Entities.SubscriptionPlan)
  name: User(Guid, string, string, string, string, SubscriptionPlan)
  href: api/WebsiteScreenshotService.Entities.User.html#WebsiteScreenshotService_Entities_User__ctor_System_Guid_System_String_System_String_System_String_System_String_WebsiteScreenshotService_Entities_SubscriptionPlan_
  commentId: M:WebsiteScreenshotService.Entities.User.#ctor(System.Guid,System.String,System.String,System.String,System.String,WebsiteScreenshotService.Entities.SubscriptionPlan)
  name.vb: New(Guid, String, String, String, String, SubscriptionPlan)
  fullName: WebsiteScreenshotService.Entities.User.User(System.Guid, string, string, string, string, WebsiteScreenshotService.Entities.SubscriptionPlan)
  fullName.vb: WebsiteScreenshotService.Entities.User.New(System.Guid, String, String, String, String, WebsiteScreenshotService.Entities.SubscriptionPlan)
  nameWithType: User.User(Guid, string, string, string, string, SubscriptionPlan)
  nameWithType.vb: User.New(Guid, String, String, String, String, SubscriptionPlan)
- uid: WebsiteScreenshotService.Entities.User.#ctor*
  name: User
  href: api/WebsiteScreenshotService.Entities.User.html#WebsiteScreenshotService_Entities_User__ctor_
  commentId: Overload:WebsiteScreenshotService.Entities.User.#ctor
  isSpec: "True"
  name.vb: New
  fullName: WebsiteScreenshotService.Entities.User.User
  fullName.vb: WebsiteScreenshotService.Entities.User.New
  nameWithType: User.User
  nameWithType.vb: User.New
- uid: WebsiteScreenshotService.Entities.User.Email
  name: Email
  href: api/WebsiteScreenshotService.Entities.User.html#WebsiteScreenshotService_Entities_User_Email
  commentId: P:WebsiteScreenshotService.Entities.User.Email
  fullName: WebsiteScreenshotService.Entities.User.Email
  nameWithType: User.Email
- uid: WebsiteScreenshotService.Entities.User.Email*
  name: Email
  href: api/WebsiteScreenshotService.Entities.User.html#WebsiteScreenshotService_Entities_User_Email_
  commentId: Overload:WebsiteScreenshotService.Entities.User.Email
  isSpec: "True"
  fullName: WebsiteScreenshotService.Entities.User.Email
  nameWithType: User.Email
- uid: WebsiteScreenshotService.Entities.User.Id
  name: Id
  href: api/WebsiteScreenshotService.Entities.User.html#WebsiteScreenshotService_Entities_User_Id
  commentId: P:WebsiteScreenshotService.Entities.User.Id
  fullName: WebsiteScreenshotService.Entities.User.Id
  nameWithType: User.Id
- uid: WebsiteScreenshotService.Entities.User.Id*
  name: Id
  href: api/WebsiteScreenshotService.Entities.User.html#WebsiteScreenshotService_Entities_User_Id_
  commentId: Overload:WebsiteScreenshotService.Entities.User.Id
  isSpec: "True"
  fullName: WebsiteScreenshotService.Entities.User.Id
  nameWithType: User.Id
- uid: WebsiteScreenshotService.Entities.User.Name
  name: Name
  href: api/WebsiteScreenshotService.Entities.User.html#WebsiteScreenshotService_Entities_User_Name
  commentId: P:WebsiteScreenshotService.Entities.User.Name
  fullName: WebsiteScreenshotService.Entities.User.Name
  nameWithType: User.Name
- uid: WebsiteScreenshotService.Entities.User.Name*
  name: Name
  href: api/WebsiteScreenshotService.Entities.User.html#WebsiteScreenshotService_Entities_User_Name_
  commentId: Overload:WebsiteScreenshotService.Entities.User.Name
  isSpec: "True"
  fullName: WebsiteScreenshotService.Entities.User.Name
  nameWithType: User.Name
- uid: WebsiteScreenshotService.Entities.User.Password
  name: Password
  href: api/WebsiteScreenshotService.Entities.User.html#WebsiteScreenshotService_Entities_User_Password
  commentId: P:WebsiteScreenshotService.Entities.User.Password
  fullName: WebsiteScreenshotService.Entities.User.Password
  nameWithType: User.Password
- uid: WebsiteScreenshotService.Entities.User.Password*
  name: Password
  href: api/WebsiteScreenshotService.Entities.User.html#WebsiteScreenshotService_Entities_User_Password_
  commentId: Overload:WebsiteScreenshotService.Entities.User.Password
  isSpec: "True"
  fullName: WebsiteScreenshotService.Entities.User.Password
  nameWithType: User.Password
- uid: WebsiteScreenshotService.Entities.User.SubscriptionPlan
  name: SubscriptionPlan
  href: api/WebsiteScreenshotService.Entities.User.html#WebsiteScreenshotService_Entities_User_SubscriptionPlan
  commentId: P:WebsiteScreenshotService.Entities.User.SubscriptionPlan
  fullName: WebsiteScreenshotService.Entities.User.SubscriptionPlan
  nameWithType: User.SubscriptionPlan
- uid: WebsiteScreenshotService.Entities.User.SubscriptionPlan*
  name: SubscriptionPlan
  href: api/WebsiteScreenshotService.Entities.User.html#WebsiteScreenshotService_Entities_User_SubscriptionPlan_
  commentId: Overload:WebsiteScreenshotService.Entities.User.SubscriptionPlan
  isSpec: "True"
  fullName: WebsiteScreenshotService.Entities.User.SubscriptionPlan
  nameWithType: User.SubscriptionPlan
- uid: WebsiteScreenshotService.Entities.User.Surname
  name: Surname
  href: api/WebsiteScreenshotService.Entities.User.html#WebsiteScreenshotService_Entities_User_Surname
  commentId: P:WebsiteScreenshotService.Entities.User.Surname
  fullName: WebsiteScreenshotService.Entities.User.Surname
  nameWithType: User.Surname
- uid: WebsiteScreenshotService.Entities.User.Surname*
  name: Surname
  href: api/WebsiteScreenshotService.Entities.User.html#WebsiteScreenshotService_Entities_User_Surname_
  commentId: Overload:WebsiteScreenshotService.Entities.User.Surname
  isSpec: "True"
  fullName: WebsiteScreenshotService.Entities.User.Surname
  nameWithType: User.Surname
- uid: WebsiteScreenshotService.Extensions
  name: WebsiteScreenshotService.Extensions
  href: api/WebsiteScreenshotService.Extensions.html
  commentId: N:WebsiteScreenshotService.Extensions
  fullName: WebsiteScreenshotService.Extensions
  nameWithType: WebsiteScreenshotService.Extensions
- uid: WebsiteScreenshotService.Extensions.PrincipalExtensions
  name: PrincipalExtensions
  href: api/WebsiteScreenshotService.Extensions.PrincipalExtensions.html
  commentId: T:WebsiteScreenshotService.Extensions.PrincipalExtensions
  fullName: WebsiteScreenshotService.Extensions.PrincipalExtensions
  nameWithType: PrincipalExtensions
- uid: WebsiteScreenshotService.Extensions.PrincipalExtensions.GetClaimValue(System.Security.Claims.ClaimsPrincipal,System.String)
  name: GetClaimValue(ClaimsPrincipal, string)
  href: api/WebsiteScreenshotService.Extensions.PrincipalExtensions.html#WebsiteScreenshotService_Extensions_PrincipalExtensions_GetClaimValue_System_Security_Claims_ClaimsPrincipal_System_String_
  commentId: M:WebsiteScreenshotService.Extensions.PrincipalExtensions.GetClaimValue(System.Security.Claims.ClaimsPrincipal,System.String)
  name.vb: GetClaimValue(ClaimsPrincipal, String)
  fullName: WebsiteScreenshotService.Extensions.PrincipalExtensions.GetClaimValue(System.Security.Claims.ClaimsPrincipal, string)
  fullName.vb: WebsiteScreenshotService.Extensions.PrincipalExtensions.GetClaimValue(System.Security.Claims.ClaimsPrincipal, String)
  nameWithType: PrincipalExtensions.GetClaimValue(ClaimsPrincipal, string)
  nameWithType.vb: PrincipalExtensions.GetClaimValue(ClaimsPrincipal, String)
- uid: WebsiteScreenshotService.Extensions.PrincipalExtensions.GetClaimValue*
  name: GetClaimValue
  href: api/WebsiteScreenshotService.Extensions.PrincipalExtensions.html#WebsiteScreenshotService_Extensions_PrincipalExtensions_GetClaimValue_
  commentId: Overload:WebsiteScreenshotService.Extensions.PrincipalExtensions.GetClaimValue
  isSpec: "True"
  fullName: WebsiteScreenshotService.Extensions.PrincipalExtensions.GetClaimValue
  nameWithType: PrincipalExtensions.GetClaimValue
- uid: WebsiteScreenshotService.Extensions.PrincipalExtensions.GetUserEmail(System.Security.Claims.ClaimsPrincipal)
  name: GetUserEmail(ClaimsPrincipal)
  href: api/WebsiteScreenshotService.Extensions.PrincipalExtensions.html#WebsiteScreenshotService_Extensions_PrincipalExtensions_GetUserEmail_System_Security_Claims_ClaimsPrincipal_
  commentId: M:WebsiteScreenshotService.Extensions.PrincipalExtensions.GetUserEmail(System.Security.Claims.ClaimsPrincipal)
  fullName: WebsiteScreenshotService.Extensions.PrincipalExtensions.GetUserEmail(System.Security.Claims.ClaimsPrincipal)
  nameWithType: PrincipalExtensions.GetUserEmail(ClaimsPrincipal)
- uid: WebsiteScreenshotService.Extensions.PrincipalExtensions.GetUserEmail*
  name: GetUserEmail
  href: api/WebsiteScreenshotService.Extensions.PrincipalExtensions.html#WebsiteScreenshotService_Extensions_PrincipalExtensions_GetUserEmail_
  commentId: Overload:WebsiteScreenshotService.Extensions.PrincipalExtensions.GetUserEmail
  isSpec: "True"
  fullName: WebsiteScreenshotService.Extensions.PrincipalExtensions.GetUserEmail
  nameWithType: PrincipalExtensions.GetUserEmail
- uid: WebsiteScreenshotService.Extensions.PrincipalExtensions.GetUserId(System.Security.Claims.ClaimsPrincipal)
  name: GetUserId(ClaimsPrincipal)
  href: api/WebsiteScreenshotService.Extensions.PrincipalExtensions.html#WebsiteScreenshotService_Extensions_PrincipalExtensions_GetUserId_System_Security_Claims_ClaimsPrincipal_
  commentId: M:WebsiteScreenshotService.Extensions.PrincipalExtensions.GetUserId(System.Security.Claims.ClaimsPrincipal)
  fullName: WebsiteScreenshotService.Extensions.PrincipalExtensions.GetUserId(System.Security.Claims.ClaimsPrincipal)
  nameWithType: PrincipalExtensions.GetUserId(ClaimsPrincipal)
- uid: WebsiteScreenshotService.Extensions.PrincipalExtensions.GetUserId*
  name: GetUserId
  href: api/WebsiteScreenshotService.Extensions.PrincipalExtensions.html#WebsiteScreenshotService_Extensions_PrincipalExtensions_GetUserId_
  commentId: Overload:WebsiteScreenshotService.Extensions.PrincipalExtensions.GetUserId
  isSpec: "True"
  fullName: WebsiteScreenshotService.Extensions.PrincipalExtensions.GetUserId
  nameWithType: PrincipalExtensions.GetUserId
- uid: WebsiteScreenshotService.Extensions.PrincipalExtensions.GetUserName(System.Security.Claims.ClaimsPrincipal)
  name: GetUserName(ClaimsPrincipal)
  href: api/WebsiteScreenshotService.Extensions.PrincipalExtensions.html#WebsiteScreenshotService_Extensions_PrincipalExtensions_GetUserName_System_Security_Claims_ClaimsPrincipal_
  commentId: M:WebsiteScreenshotService.Extensions.PrincipalExtensions.GetUserName(System.Security.Claims.ClaimsPrincipal)
  fullName: WebsiteScreenshotService.Extensions.PrincipalExtensions.GetUserName(System.Security.Claims.ClaimsPrincipal)
  nameWithType: PrincipalExtensions.GetUserName(ClaimsPrincipal)
- uid: WebsiteScreenshotService.Extensions.PrincipalExtensions.GetUserName*
  name: GetUserName
  href: api/WebsiteScreenshotService.Extensions.PrincipalExtensions.html#WebsiteScreenshotService_Extensions_PrincipalExtensions_GetUserName_
  commentId: Overload:WebsiteScreenshotService.Extensions.PrincipalExtensions.GetUserName
  isSpec: "True"
  fullName: WebsiteScreenshotService.Extensions.PrincipalExtensions.GetUserName
  nameWithType: PrincipalExtensions.GetUserName
- uid: WebsiteScreenshotService.Extensions.PrincipalExtensions.UpdateClaim(Microsoft.AspNetCore.Http.HttpContext,System.String,System.String)
  name: UpdateClaim(HttpContext, string, string)
  href: api/WebsiteScreenshotService.Extensions.PrincipalExtensions.html#WebsiteScreenshotService_Extensions_PrincipalExtensions_UpdateClaim_Microsoft_AspNetCore_Http_HttpContext_System_String_System_String_
  commentId: M:WebsiteScreenshotService.Extensions.PrincipalExtensions.UpdateClaim(Microsoft.AspNetCore.Http.HttpContext,System.String,System.String)
  name.vb: UpdateClaim(HttpContext, String, String)
  fullName: WebsiteScreenshotService.Extensions.PrincipalExtensions.UpdateClaim(Microsoft.AspNetCore.Http.HttpContext, string, string)
  fullName.vb: WebsiteScreenshotService.Extensions.PrincipalExtensions.UpdateClaim(Microsoft.AspNetCore.Http.HttpContext, String, String)
  nameWithType: PrincipalExtensions.UpdateClaim(HttpContext, string, string)
  nameWithType.vb: PrincipalExtensions.UpdateClaim(HttpContext, String, String)
- uid: WebsiteScreenshotService.Extensions.PrincipalExtensions.UpdateClaim*
  name: UpdateClaim
  href: api/WebsiteScreenshotService.Extensions.PrincipalExtensions.html#WebsiteScreenshotService_Extensions_PrincipalExtensions_UpdateClaim_
  commentId: Overload:WebsiteScreenshotService.Extensions.PrincipalExtensions.UpdateClaim
  isSpec: "True"
  fullName: WebsiteScreenshotService.Extensions.PrincipalExtensions.UpdateClaim
  nameWithType: PrincipalExtensions.UpdateClaim
- uid: WebsiteScreenshotService.Extensions.UserExtensions
  name: UserExtensions
  href: api/WebsiteScreenshotService.Extensions.UserExtensions.html
  commentId: T:WebsiteScreenshotService.Extensions.UserExtensions
  fullName: WebsiteScreenshotService.Extensions.UserExtensions
  nameWithType: UserExtensions
- uid: WebsiteScreenshotService.Extensions.UserExtensions.GetUserClaims(WebsiteScreenshotService.Entities.User)
  name: GetUserClaims(User)
  href: api/WebsiteScreenshotService.Extensions.UserExtensions.html#WebsiteScreenshotService_Extensions_UserExtensions_GetUserClaims_WebsiteScreenshotService_Entities_User_
  commentId: M:WebsiteScreenshotService.Extensions.UserExtensions.GetUserClaims(WebsiteScreenshotService.Entities.User)
  fullName: WebsiteScreenshotService.Extensions.UserExtensions.GetUserClaims(WebsiteScreenshotService.Entities.User)
  nameWithType: UserExtensions.GetUserClaims(User)
- uid: WebsiteScreenshotService.Extensions.UserExtensions.GetUserClaims*
  name: GetUserClaims
  href: api/WebsiteScreenshotService.Extensions.UserExtensions.html#WebsiteScreenshotService_Extensions_UserExtensions_GetUserClaims_
  commentId: Overload:WebsiteScreenshotService.Extensions.UserExtensions.GetUserClaims
  isSpec: "True"
  fullName: WebsiteScreenshotService.Extensions.UserExtensions.GetUserClaims
  nameWithType: UserExtensions.GetUserClaims
- uid: WebsiteScreenshotService.Model
  name: WebsiteScreenshotService.Model
  href: api/WebsiteScreenshotService.Model.html
  commentId: N:WebsiteScreenshotService.Model
  fullName: WebsiteScreenshotService.Model
  nameWithType: WebsiteScreenshotService.Model
- uid: WebsiteScreenshotService.Model.LoginModel
  name: LoginModel
  href: api/WebsiteScreenshotService.Model.LoginModel.html
  commentId: T:WebsiteScreenshotService.Model.LoginModel
  fullName: WebsiteScreenshotService.Model.LoginModel
  nameWithType: LoginModel
- uid: WebsiteScreenshotService.Model.LoginModel.Email
  name: Email
  href: api/WebsiteScreenshotService.Model.LoginModel.html#WebsiteScreenshotService_Model_LoginModel_Email
  commentId: P:WebsiteScreenshotService.Model.LoginModel.Email
  fullName: WebsiteScreenshotService.Model.LoginModel.Email
  nameWithType: LoginModel.Email
- uid: WebsiteScreenshotService.Model.LoginModel.Email*
  name: Email
  href: api/WebsiteScreenshotService.Model.LoginModel.html#WebsiteScreenshotService_Model_LoginModel_Email_
  commentId: Overload:WebsiteScreenshotService.Model.LoginModel.Email
  isSpec: "True"
  fullName: WebsiteScreenshotService.Model.LoginModel.Email
  nameWithType: LoginModel.Email
- uid: WebsiteScreenshotService.Model.LoginModel.Password
  name: Password
  href: api/WebsiteScreenshotService.Model.LoginModel.html#WebsiteScreenshotService_Model_LoginModel_Password
  commentId: P:WebsiteScreenshotService.Model.LoginModel.Password
  fullName: WebsiteScreenshotService.Model.LoginModel.Password
  nameWithType: LoginModel.Password
- uid: WebsiteScreenshotService.Model.LoginModel.Password*
  name: Password
  href: api/WebsiteScreenshotService.Model.LoginModel.html#WebsiteScreenshotService_Model_LoginModel_Password_
  commentId: Overload:WebsiteScreenshotService.Model.LoginModel.Password
  isSpec: "True"
  fullName: WebsiteScreenshotService.Model.LoginModel.Password
  nameWithType: LoginModel.Password
- uid: WebsiteScreenshotService.Model.RegisterModel
  name: RegisterModel
  href: api/WebsiteScreenshotService.Model.RegisterModel.html
  commentId: T:WebsiteScreenshotService.Model.RegisterModel
  fullName: WebsiteScreenshotService.Model.RegisterModel
  nameWithType: RegisterModel
- uid: WebsiteScreenshotService.Model.RegisterModel.Email
  name: Email
  href: api/WebsiteScreenshotService.Model.RegisterModel.html#WebsiteScreenshotService_Model_RegisterModel_Email
  commentId: P:WebsiteScreenshotService.Model.RegisterModel.Email
  fullName: WebsiteScreenshotService.Model.RegisterModel.Email
  nameWithType: RegisterModel.Email
- uid: WebsiteScreenshotService.Model.RegisterModel.Email*
  name: Email
  href: api/WebsiteScreenshotService.Model.RegisterModel.html#WebsiteScreenshotService_Model_RegisterModel_Email_
  commentId: Overload:WebsiteScreenshotService.Model.RegisterModel.Email
  isSpec: "True"
  fullName: WebsiteScreenshotService.Model.RegisterModel.Email
  nameWithType: RegisterModel.Email
- uid: WebsiteScreenshotService.Model.RegisterModel.Name
  name: Name
  href: api/WebsiteScreenshotService.Model.RegisterModel.html#WebsiteScreenshotService_Model_RegisterModel_Name
  commentId: P:WebsiteScreenshotService.Model.RegisterModel.Name
  fullName: WebsiteScreenshotService.Model.RegisterModel.Name
  nameWithType: RegisterModel.Name
- uid: WebsiteScreenshotService.Model.RegisterModel.Name*
  name: Name
  href: api/WebsiteScreenshotService.Model.RegisterModel.html#WebsiteScreenshotService_Model_RegisterModel_Name_
  commentId: Overload:WebsiteScreenshotService.Model.RegisterModel.Name
  isSpec: "True"
  fullName: WebsiteScreenshotService.Model.RegisterModel.Name
  nameWithType: RegisterModel.Name
- uid: WebsiteScreenshotService.Model.RegisterModel.Password
  name: Password
  href: api/WebsiteScreenshotService.Model.RegisterModel.html#WebsiteScreenshotService_Model_RegisterModel_Password
  commentId: P:WebsiteScreenshotService.Model.RegisterModel.Password
  fullName: WebsiteScreenshotService.Model.RegisterModel.Password
  nameWithType: RegisterModel.Password
- uid: WebsiteScreenshotService.Model.RegisterModel.Password*
  name: Password
  href: api/WebsiteScreenshotService.Model.RegisterModel.html#WebsiteScreenshotService_Model_RegisterModel_Password_
  commentId: Overload:WebsiteScreenshotService.Model.RegisterModel.Password
  isSpec: "True"
  fullName: WebsiteScreenshotService.Model.RegisterModel.Password
  nameWithType: RegisterModel.Password
- uid: WebsiteScreenshotService.Model.RegisterModel.Surname
  name: Surname
  href: api/WebsiteScreenshotService.Model.RegisterModel.html#WebsiteScreenshotService_Model_RegisterModel_Surname
  commentId: P:WebsiteScreenshotService.Model.RegisterModel.Surname
  fullName: WebsiteScreenshotService.Model.RegisterModel.Surname
  nameWithType: RegisterModel.Surname
- uid: WebsiteScreenshotService.Model.RegisterModel.Surname*
  name: Surname
  href: api/WebsiteScreenshotService.Model.RegisterModel.html#WebsiteScreenshotService_Model_RegisterModel_Surname_
  commentId: Overload:WebsiteScreenshotService.Model.RegisterModel.Surname
  isSpec: "True"
  fullName: WebsiteScreenshotService.Model.RegisterModel.Surname
  nameWithType: RegisterModel.Surname
- uid: WebsiteScreenshotService.Model.RegisterModel.ToEntity
  name: ToEntity()
  href: api/WebsiteScreenshotService.Model.RegisterModel.html#WebsiteScreenshotService_Model_RegisterModel_ToEntity
  commentId: M:WebsiteScreenshotService.Model.RegisterModel.ToEntity
  fullName: WebsiteScreenshotService.Model.RegisterModel.ToEntity()
  nameWithType: RegisterModel.ToEntity()
- uid: WebsiteScreenshotService.Model.RegisterModel.ToEntity*
  name: ToEntity
  href: api/WebsiteScreenshotService.Model.RegisterModel.html#WebsiteScreenshotService_Model_RegisterModel_ToEntity_
  commentId: Overload:WebsiteScreenshotService.Model.RegisterModel.ToEntity
  isSpec: "True"
  fullName: WebsiteScreenshotService.Model.RegisterModel.ToEntity
  nameWithType: RegisterModel.ToEntity
- uid: WebsiteScreenshotService.Model.ScreenshotOptionsModel
  name: ScreenshotOptionsModel
  href: api/WebsiteScreenshotService.Model.ScreenshotOptionsModel.html
  commentId: T:WebsiteScreenshotService.Model.ScreenshotOptionsModel
  fullName: WebsiteScreenshotService.Model.ScreenshotOptionsModel
  nameWithType: ScreenshotOptionsModel
- uid: WebsiteScreenshotService.Model.ScreenshotOptionsModel.Clip
  name: Clip
  href: api/WebsiteScreenshotService.Model.ScreenshotOptionsModel.html#WebsiteScreenshotService_Model_ScreenshotOptionsModel_Clip
  commentId: P:WebsiteScreenshotService.Model.ScreenshotOptionsModel.Clip
  fullName: WebsiteScreenshotService.Model.ScreenshotOptionsModel.Clip
  nameWithType: ScreenshotOptionsModel.Clip
- uid: WebsiteScreenshotService.Model.ScreenshotOptionsModel.Clip*
  name: Clip
  href: api/WebsiteScreenshotService.Model.ScreenshotOptionsModel.html#WebsiteScreenshotService_Model_ScreenshotOptionsModel_Clip_
  commentId: Overload:WebsiteScreenshotService.Model.ScreenshotOptionsModel.Clip
  isSpec: "True"
  fullName: WebsiteScreenshotService.Model.ScreenshotOptionsModel.Clip
  nameWithType: ScreenshotOptionsModel.Clip
- uid: WebsiteScreenshotService.Model.ScreenshotOptionsModel.FullSreen
  name: FullSreen
  href: api/WebsiteScreenshotService.Model.ScreenshotOptionsModel.html#WebsiteScreenshotService_Model_ScreenshotOptionsModel_FullSreen
  commentId: P:WebsiteScreenshotService.Model.ScreenshotOptionsModel.FullSreen
  fullName: WebsiteScreenshotService.Model.ScreenshotOptionsModel.FullSreen
  nameWithType: ScreenshotOptionsModel.FullSreen
- uid: WebsiteScreenshotService.Model.ScreenshotOptionsModel.FullSreen*
  name: FullSreen
  href: api/WebsiteScreenshotService.Model.ScreenshotOptionsModel.html#WebsiteScreenshotService_Model_ScreenshotOptionsModel_FullSreen_
  commentId: Overload:WebsiteScreenshotService.Model.ScreenshotOptionsModel.FullSreen
  isSpec: "True"
  fullName: WebsiteScreenshotService.Model.ScreenshotOptionsModel.FullSreen
  nameWithType: ScreenshotOptionsModel.FullSreen
- uid: WebsiteScreenshotService.Model.ScreenshotOptionsModel.Quality
  name: Quality
  href: api/WebsiteScreenshotService.Model.ScreenshotOptionsModel.html#WebsiteScreenshotService_Model_ScreenshotOptionsModel_Quality
  commentId: P:WebsiteScreenshotService.Model.ScreenshotOptionsModel.Quality
  fullName: WebsiteScreenshotService.Model.ScreenshotOptionsModel.Quality
  nameWithType: ScreenshotOptionsModel.Quality
- uid: WebsiteScreenshotService.Model.ScreenshotOptionsModel.Quality*
  name: Quality
  href: api/WebsiteScreenshotService.Model.ScreenshotOptionsModel.html#WebsiteScreenshotService_Model_ScreenshotOptionsModel_Quality_
  commentId: Overload:WebsiteScreenshotService.Model.ScreenshotOptionsModel.Quality
  isSpec: "True"
  fullName: WebsiteScreenshotService.Model.ScreenshotOptionsModel.Quality
  nameWithType: ScreenshotOptionsModel.Quality
- uid: WebsiteScreenshotService.Model.ScreenshotOptionsModel.ScreenshotType
  name: ScreenshotType
  href: api/WebsiteScreenshotService.Model.ScreenshotOptionsModel.html#WebsiteScreenshotService_Model_ScreenshotOptionsModel_ScreenshotType
  commentId: P:WebsiteScreenshotService.Model.ScreenshotOptionsModel.ScreenshotType
  fullName: WebsiteScreenshotService.Model.ScreenshotOptionsModel.ScreenshotType
  nameWithType: ScreenshotOptionsModel.ScreenshotType
- uid: WebsiteScreenshotService.Model.ScreenshotOptionsModel.ScreenshotType*
  name: ScreenshotType
  href: api/WebsiteScreenshotService.Model.ScreenshotOptionsModel.html#WebsiteScreenshotService_Model_ScreenshotOptionsModel_ScreenshotType_
  commentId: Overload:WebsiteScreenshotService.Model.ScreenshotOptionsModel.ScreenshotType
  isSpec: "True"
  fullName: WebsiteScreenshotService.Model.ScreenshotOptionsModel.ScreenshotType
  nameWithType: ScreenshotOptionsModel.ScreenshotType
- uid: WebsiteScreenshotService.Model.ScreenshotOptionsModel.Url
  name: Url
  href: api/WebsiteScreenshotService.Model.ScreenshotOptionsModel.html#WebsiteScreenshotService_Model_ScreenshotOptionsModel_Url
  commentId: P:WebsiteScreenshotService.Model.ScreenshotOptionsModel.Url
  fullName: WebsiteScreenshotService.Model.ScreenshotOptionsModel.Url
  nameWithType: ScreenshotOptionsModel.Url
- uid: WebsiteScreenshotService.Model.ScreenshotOptionsModel.Url*
  name: Url
  href: api/WebsiteScreenshotService.Model.ScreenshotOptionsModel.html#WebsiteScreenshotService_Model_ScreenshotOptionsModel_Url_
  commentId: Overload:WebsiteScreenshotService.Model.ScreenshotOptionsModel.Url
  isSpec: "True"
  fullName: WebsiteScreenshotService.Model.ScreenshotOptionsModel.Url
  nameWithType: ScreenshotOptionsModel.Url
- uid: WebsiteScreenshotService.Model.UserModel
  name: UserModel
  href: api/WebsiteScreenshotService.Model.UserModel.html
  commentId: T:WebsiteScreenshotService.Model.UserModel
  fullName: WebsiteScreenshotService.Model.UserModel
  nameWithType: UserModel
- uid: WebsiteScreenshotService.Model.UserModel.#ctor(System.String,System.String,System.String,WebsiteScreenshotService.Entities.SubscriptionPlan)
  name: UserModel(string, string, string, SubscriptionPlan)
  href: api/WebsiteScreenshotService.Model.UserModel.html#WebsiteScreenshotService_Model_UserModel__ctor_System_String_System_String_System_String_WebsiteScreenshotService_Entities_SubscriptionPlan_
  commentId: M:WebsiteScreenshotService.Model.UserModel.#ctor(System.String,System.String,System.String,WebsiteScreenshotService.Entities.SubscriptionPlan)
  name.vb: New(String, String, String, SubscriptionPlan)
  fullName: WebsiteScreenshotService.Model.UserModel.UserModel(string, string, string, WebsiteScreenshotService.Entities.SubscriptionPlan)
  fullName.vb: WebsiteScreenshotService.Model.UserModel.New(String, String, String, WebsiteScreenshotService.Entities.SubscriptionPlan)
  nameWithType: UserModel.UserModel(string, string, string, SubscriptionPlan)
  nameWithType.vb: UserModel.New(String, String, String, SubscriptionPlan)
- uid: WebsiteScreenshotService.Model.UserModel.#ctor*
  name: UserModel
  href: api/WebsiteScreenshotService.Model.UserModel.html#WebsiteScreenshotService_Model_UserModel__ctor_
  commentId: Overload:WebsiteScreenshotService.Model.UserModel.#ctor
  isSpec: "True"
  name.vb: New
  fullName: WebsiteScreenshotService.Model.UserModel.UserModel
  fullName.vb: WebsiteScreenshotService.Model.UserModel.New
  nameWithType: UserModel.UserModel
  nameWithType.vb: UserModel.New
- uid: WebsiteScreenshotService.Model.UserModel.Email
  name: Email
  href: api/WebsiteScreenshotService.Model.UserModel.html#WebsiteScreenshotService_Model_UserModel_Email
  commentId: P:WebsiteScreenshotService.Model.UserModel.Email
  fullName: WebsiteScreenshotService.Model.UserModel.Email
  nameWithType: UserModel.Email
- uid: WebsiteScreenshotService.Model.UserModel.Email*
  name: Email
  href: api/WebsiteScreenshotService.Model.UserModel.html#WebsiteScreenshotService_Model_UserModel_Email_
  commentId: Overload:WebsiteScreenshotService.Model.UserModel.Email
  isSpec: "True"
  fullName: WebsiteScreenshotService.Model.UserModel.Email
  nameWithType: UserModel.Email
- uid: WebsiteScreenshotService.Model.UserModel.GetModel(WebsiteScreenshotService.Entities.User)
  name: GetModel(User)
  href: api/WebsiteScreenshotService.Model.UserModel.html#WebsiteScreenshotService_Model_UserModel_GetModel_WebsiteScreenshotService_Entities_User_
  commentId: M:WebsiteScreenshotService.Model.UserModel.GetModel(WebsiteScreenshotService.Entities.User)
  fullName: WebsiteScreenshotService.Model.UserModel.GetModel(WebsiteScreenshotService.Entities.User)
  nameWithType: UserModel.GetModel(User)
- uid: WebsiteScreenshotService.Model.UserModel.GetModel*
  name: GetModel
  href: api/WebsiteScreenshotService.Model.UserModel.html#WebsiteScreenshotService_Model_UserModel_GetModel_
  commentId: Overload:WebsiteScreenshotService.Model.UserModel.GetModel
  isSpec: "True"
  fullName: WebsiteScreenshotService.Model.UserModel.GetModel
  nameWithType: UserModel.GetModel
- uid: WebsiteScreenshotService.Model.UserModel.Name
  name: Name
  href: api/WebsiteScreenshotService.Model.UserModel.html#WebsiteScreenshotService_Model_UserModel_Name
  commentId: P:WebsiteScreenshotService.Model.UserModel.Name
  fullName: WebsiteScreenshotService.Model.UserModel.Name
  nameWithType: UserModel.Name
- uid: WebsiteScreenshotService.Model.UserModel.Name*
  name: Name
  href: api/WebsiteScreenshotService.Model.UserModel.html#WebsiteScreenshotService_Model_UserModel_Name_
  commentId: Overload:WebsiteScreenshotService.Model.UserModel.Name
  isSpec: "True"
  fullName: WebsiteScreenshotService.Model.UserModel.Name
  nameWithType: UserModel.Name
- uid: WebsiteScreenshotService.Model.UserModel.SubscriptionPlan
  name: SubscriptionPlan
  href: api/WebsiteScreenshotService.Model.UserModel.html#WebsiteScreenshotService_Model_UserModel_SubscriptionPlan
  commentId: P:WebsiteScreenshotService.Model.UserModel.SubscriptionPlan
  fullName: WebsiteScreenshotService.Model.UserModel.SubscriptionPlan
  nameWithType: UserModel.SubscriptionPlan
- uid: WebsiteScreenshotService.Model.UserModel.SubscriptionPlan*
  name: SubscriptionPlan
  href: api/WebsiteScreenshotService.Model.UserModel.html#WebsiteScreenshotService_Model_UserModel_SubscriptionPlan_
  commentId: Overload:WebsiteScreenshotService.Model.UserModel.SubscriptionPlan
  isSpec: "True"
  fullName: WebsiteScreenshotService.Model.UserModel.SubscriptionPlan
  nameWithType: UserModel.SubscriptionPlan
- uid: WebsiteScreenshotService.Model.UserModel.Surname
  name: Surname
  href: api/WebsiteScreenshotService.Model.UserModel.html#WebsiteScreenshotService_Model_UserModel_Surname
  commentId: P:WebsiteScreenshotService.Model.UserModel.Surname
  fullName: WebsiteScreenshotService.Model.UserModel.Surname
  nameWithType: UserModel.Surname
- uid: WebsiteScreenshotService.Model.UserModel.Surname*
  name: Surname
  href: api/WebsiteScreenshotService.Model.UserModel.html#WebsiteScreenshotService_Model_UserModel_Surname_
  commentId: Overload:WebsiteScreenshotService.Model.UserModel.Surname
  isSpec: "True"
  fullName: WebsiteScreenshotService.Model.UserModel.Surname
  nameWithType: UserModel.Surname
- uid: WebsiteScreenshotService.Repositories
  name: WebsiteScreenshotService.Repositories
  href: api/WebsiteScreenshotService.Repositories.html
  commentId: N:WebsiteScreenshotService.Repositories
  fullName: WebsiteScreenshotService.Repositories
  nameWithType: WebsiteScreenshotService.Repositories
- uid: WebsiteScreenshotService.Repositories.IUserRepository
  name: IUserRepository
  href: api/WebsiteScreenshotService.Repositories.IUserRepository.html
  commentId: T:WebsiteScreenshotService.Repositories.IUserRepository
  fullName: WebsiteScreenshotService.Repositories.IUserRepository
  nameWithType: IUserRepository
- uid: WebsiteScreenshotService.Repositories.IUserRepository.CreateUser(WebsiteScreenshotService.Entities.User)
  name: CreateUser(User)
  href: api/WebsiteScreenshotService.Repositories.IUserRepository.html#WebsiteScreenshotService_Repositories_IUserRepository_CreateUser_WebsiteScreenshotService_Entities_User_
  commentId: M:WebsiteScreenshotService.Repositories.IUserRepository.CreateUser(WebsiteScreenshotService.Entities.User)
  fullName: WebsiteScreenshotService.Repositories.IUserRepository.CreateUser(WebsiteScreenshotService.Entities.User)
  nameWithType: IUserRepository.CreateUser(User)
- uid: WebsiteScreenshotService.Repositories.IUserRepository.CreateUser*
  name: CreateUser
  href: api/WebsiteScreenshotService.Repositories.IUserRepository.html#WebsiteScreenshotService_Repositories_IUserRepository_CreateUser_
  commentId: Overload:WebsiteScreenshotService.Repositories.IUserRepository.CreateUser
  isSpec: "True"
  fullName: WebsiteScreenshotService.Repositories.IUserRepository.CreateUser
  nameWithType: IUserRepository.CreateUser
- uid: WebsiteScreenshotService.Repositories.IUserRepository.GetUserByEmailAndPasswordAsync(System.String,System.String)
  name: GetUserByEmailAndPasswordAsync(string, string)
  href: api/WebsiteScreenshotService.Repositories.IUserRepository.html#WebsiteScreenshotService_Repositories_IUserRepository_GetUserByEmailAndPasswordAsync_System_String_System_String_
  commentId: M:WebsiteScreenshotService.Repositories.IUserRepository.GetUserByEmailAndPasswordAsync(System.String,System.String)
  name.vb: GetUserByEmailAndPasswordAsync(String, String)
  fullName: WebsiteScreenshotService.Repositories.IUserRepository.GetUserByEmailAndPasswordAsync(string, string)
  fullName.vb: WebsiteScreenshotService.Repositories.IUserRepository.GetUserByEmailAndPasswordAsync(String, String)
  nameWithType: IUserRepository.GetUserByEmailAndPasswordAsync(string, string)
  nameWithType.vb: IUserRepository.GetUserByEmailAndPasswordAsync(String, String)
- uid: WebsiteScreenshotService.Repositories.IUserRepository.GetUserByEmailAndPasswordAsync*
  name: GetUserByEmailAndPasswordAsync
  href: api/WebsiteScreenshotService.Repositories.IUserRepository.html#WebsiteScreenshotService_Repositories_IUserRepository_GetUserByEmailAndPasswordAsync_
  commentId: Overload:WebsiteScreenshotService.Repositories.IUserRepository.GetUserByEmailAndPasswordAsync
  isSpec: "True"
  fullName: WebsiteScreenshotService.Repositories.IUserRepository.GetUserByEmailAndPasswordAsync
  nameWithType: IUserRepository.GetUserByEmailAndPasswordAsync
- uid: WebsiteScreenshotService.Repositories.IUserRepository.GetUserSubscription(System.Guid)
  name: GetUserSubscription(Guid)
  href: api/WebsiteScreenshotService.Repositories.IUserRepository.html#WebsiteScreenshotService_Repositories_IUserRepository_GetUserSubscription_System_Guid_
  commentId: M:WebsiteScreenshotService.Repositories.IUserRepository.GetUserSubscription(System.Guid)
  fullName: WebsiteScreenshotService.Repositories.IUserRepository.GetUserSubscription(System.Guid)
  nameWithType: IUserRepository.GetUserSubscription(Guid)
- uid: WebsiteScreenshotService.Repositories.IUserRepository.GetUserSubscription*
  name: GetUserSubscription
  href: api/WebsiteScreenshotService.Repositories.IUserRepository.html#WebsiteScreenshotService_Repositories_IUserRepository_GetUserSubscription_
  commentId: Overload:WebsiteScreenshotService.Repositories.IUserRepository.GetUserSubscription
  isSpec: "True"
  fullName: WebsiteScreenshotService.Repositories.IUserRepository.GetUserSubscription
  nameWithType: IUserRepository.GetUserSubscription
- uid: WebsiteScreenshotService.Repositories.IUserRepository.ScreenshotWasMade(System.Guid)
  name: ScreenshotWasMade(Guid)
  href: api/WebsiteScreenshotService.Repositories.IUserRepository.html#WebsiteScreenshotService_Repositories_IUserRepository_ScreenshotWasMade_System_Guid_
  commentId: M:WebsiteScreenshotService.Repositories.IUserRepository.ScreenshotWasMade(System.Guid)
  fullName: WebsiteScreenshotService.Repositories.IUserRepository.ScreenshotWasMade(System.Guid)
  nameWithType: IUserRepository.ScreenshotWasMade(Guid)
- uid: WebsiteScreenshotService.Repositories.IUserRepository.ScreenshotWasMade*
  name: ScreenshotWasMade
  href: api/WebsiteScreenshotService.Repositories.IUserRepository.html#WebsiteScreenshotService_Repositories_IUserRepository_ScreenshotWasMade_
  commentId: Overload:WebsiteScreenshotService.Repositories.IUserRepository.ScreenshotWasMade
  isSpec: "True"
  fullName: WebsiteScreenshotService.Repositories.IUserRepository.ScreenshotWasMade
  nameWithType: IUserRepository.ScreenshotWasMade
- uid: WebsiteScreenshotService.Repositories.InMemoryUserRepository
  name: InMemoryUserRepository
  href: api/WebsiteScreenshotService.Repositories.InMemoryUserRepository.html
  commentId: T:WebsiteScreenshotService.Repositories.InMemoryUserRepository
  fullName: WebsiteScreenshotService.Repositories.InMemoryUserRepository
  nameWithType: InMemoryUserRepository
- uid: WebsiteScreenshotService.Repositories.InMemoryUserRepository.CreateUser(WebsiteScreenshotService.Entities.User)
  name: CreateUser(User)
  href: api/WebsiteScreenshotService.Repositories.InMemoryUserRepository.html#WebsiteScreenshotService_Repositories_InMemoryUserRepository_CreateUser_WebsiteScreenshotService_Entities_User_
  commentId: M:WebsiteScreenshotService.Repositories.InMemoryUserRepository.CreateUser(WebsiteScreenshotService.Entities.User)
  fullName: WebsiteScreenshotService.Repositories.InMemoryUserRepository.CreateUser(WebsiteScreenshotService.Entities.User)
  nameWithType: InMemoryUserRepository.CreateUser(User)
- uid: WebsiteScreenshotService.Repositories.InMemoryUserRepository.CreateUser*
  name: CreateUser
  href: api/WebsiteScreenshotService.Repositories.InMemoryUserRepository.html#WebsiteScreenshotService_Repositories_InMemoryUserRepository_CreateUser_
  commentId: Overload:WebsiteScreenshotService.Repositories.InMemoryUserRepository.CreateUser
  isSpec: "True"
  fullName: WebsiteScreenshotService.Repositories.InMemoryUserRepository.CreateUser
  nameWithType: InMemoryUserRepository.CreateUser
- uid: WebsiteScreenshotService.Repositories.InMemoryUserRepository.GetUserByEmailAndPasswordAsync(System.String,System.String)
  name: GetUserByEmailAndPasswordAsync(string, string)
  href: api/WebsiteScreenshotService.Repositories.InMemoryUserRepository.html#WebsiteScreenshotService_Repositories_InMemoryUserRepository_GetUserByEmailAndPasswordAsync_System_String_System_String_
  commentId: M:WebsiteScreenshotService.Repositories.InMemoryUserRepository.GetUserByEmailAndPasswordAsync(System.String,System.String)
  name.vb: GetUserByEmailAndPasswordAsync(String, String)
  fullName: WebsiteScreenshotService.Repositories.InMemoryUserRepository.GetUserByEmailAndPasswordAsync(string, string)
  fullName.vb: WebsiteScreenshotService.Repositories.InMemoryUserRepository.GetUserByEmailAndPasswordAsync(String, String)
  nameWithType: InMemoryUserRepository.GetUserByEmailAndPasswordAsync(string, string)
  nameWithType.vb: InMemoryUserRepository.GetUserByEmailAndPasswordAsync(String, String)
- uid: WebsiteScreenshotService.Repositories.InMemoryUserRepository.GetUserByEmailAndPasswordAsync*
  name: GetUserByEmailAndPasswordAsync
  href: api/WebsiteScreenshotService.Repositories.InMemoryUserRepository.html#WebsiteScreenshotService_Repositories_InMemoryUserRepository_GetUserByEmailAndPasswordAsync_
  commentId: Overload:WebsiteScreenshotService.Repositories.InMemoryUserRepository.GetUserByEmailAndPasswordAsync
  isSpec: "True"
  fullName: WebsiteScreenshotService.Repositories.InMemoryUserRepository.GetUserByEmailAndPasswordAsync
  nameWithType: InMemoryUserRepository.GetUserByEmailAndPasswordAsync
- uid: WebsiteScreenshotService.Repositories.InMemoryUserRepository.GetUserSubscription(System.Guid)
  name: GetUserSubscription(Guid)
  href: api/WebsiteScreenshotService.Repositories.InMemoryUserRepository.html#WebsiteScreenshotService_Repositories_InMemoryUserRepository_GetUserSubscription_System_Guid_
  commentId: M:WebsiteScreenshotService.Repositories.InMemoryUserRepository.GetUserSubscription(System.Guid)
  fullName: WebsiteScreenshotService.Repositories.InMemoryUserRepository.GetUserSubscription(System.Guid)
  nameWithType: InMemoryUserRepository.GetUserSubscription(Guid)
- uid: WebsiteScreenshotService.Repositories.InMemoryUserRepository.GetUserSubscription*
  name: GetUserSubscription
  href: api/WebsiteScreenshotService.Repositories.InMemoryUserRepository.html#WebsiteScreenshotService_Repositories_InMemoryUserRepository_GetUserSubscription_
  commentId: Overload:WebsiteScreenshotService.Repositories.InMemoryUserRepository.GetUserSubscription
  isSpec: "True"
  fullName: WebsiteScreenshotService.Repositories.InMemoryUserRepository.GetUserSubscription
  nameWithType: InMemoryUserRepository.GetUserSubscription
- uid: WebsiteScreenshotService.Repositories.InMemoryUserRepository.ScreenshotWasMade(System.Guid)
  name: ScreenshotWasMade(Guid)
  href: api/WebsiteScreenshotService.Repositories.InMemoryUserRepository.html#WebsiteScreenshotService_Repositories_InMemoryUserRepository_ScreenshotWasMade_System_Guid_
  commentId: M:WebsiteScreenshotService.Repositories.InMemoryUserRepository.ScreenshotWasMade(System.Guid)
  fullName: WebsiteScreenshotService.Repositories.InMemoryUserRepository.ScreenshotWasMade(System.Guid)
  nameWithType: InMemoryUserRepository.ScreenshotWasMade(Guid)
- uid: WebsiteScreenshotService.Repositories.InMemoryUserRepository.ScreenshotWasMade*
  name: ScreenshotWasMade
  href: api/WebsiteScreenshotService.Repositories.InMemoryUserRepository.html#WebsiteScreenshotService_Repositories_InMemoryUserRepository_ScreenshotWasMade_
  commentId: Overload:WebsiteScreenshotService.Repositories.InMemoryUserRepository.ScreenshotWasMade
  isSpec: "True"
  fullName: WebsiteScreenshotService.Repositories.InMemoryUserRepository.ScreenshotWasMade
  nameWithType: InMemoryUserRepository.ScreenshotWasMade
- uid: WebsiteScreenshotService.ServiceExtensions
  name: WebsiteScreenshotService.ServiceExtensions
  href: api/WebsiteScreenshotService.ServiceExtensions.html
  commentId: N:WebsiteScreenshotService.ServiceExtensions
  fullName: WebsiteScreenshotService.ServiceExtensions
  nameWithType: WebsiteScreenshotService.ServiceExtensions
- uid: WebsiteScreenshotService.ServiceExtensions.ControllerSevicesExtension
  name: ControllerSevicesExtension
  href: api/WebsiteScreenshotService.ServiceExtensions.ControllerSevicesExtension.html
  commentId: T:WebsiteScreenshotService.ServiceExtensions.ControllerSevicesExtension
  fullName: WebsiteScreenshotService.ServiceExtensions.ControllerSevicesExtension
  nameWithType: ControllerSevicesExtension
- uid: WebsiteScreenshotService.ServiceExtensions.ControllerSevicesExtension.AddControllerServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  name: AddControllerServices(IServiceCollection)
  href: api/WebsiteScreenshotService.ServiceExtensions.ControllerSevicesExtension.html#WebsiteScreenshotService_ServiceExtensions_ControllerSevicesExtension_AddControllerServices_Microsoft_Extensions_DependencyInjection_IServiceCollection_
  commentId: M:WebsiteScreenshotService.ServiceExtensions.ControllerSevicesExtension.AddControllerServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  fullName: WebsiteScreenshotService.ServiceExtensions.ControllerSevicesExtension.AddControllerServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  nameWithType: ControllerSevicesExtension.AddControllerServices(IServiceCollection)
- uid: WebsiteScreenshotService.ServiceExtensions.ControllerSevicesExtension.AddControllerServices*
  name: AddControllerServices
  href: api/WebsiteScreenshotService.ServiceExtensions.ControllerSevicesExtension.html#WebsiteScreenshotService_ServiceExtensions_ControllerSevicesExtension_AddControllerServices_
  commentId: Overload:WebsiteScreenshotService.ServiceExtensions.ControllerSevicesExtension.AddControllerServices
  isSpec: "True"
  fullName: WebsiteScreenshotService.ServiceExtensions.ControllerSevicesExtension.AddControllerServices
  nameWithType: ControllerSevicesExtension.AddControllerServices
- uid: WebsiteScreenshotService.ServiceExtensions.ControllerSevicesExtension.CreateValidationProblemDetails(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary,System.String)
  name: CreateValidationProblemDetails(ModelStateDictionary, string)
  href: api/WebsiteScreenshotService.ServiceExtensions.ControllerSevicesExtension.html#WebsiteScreenshotService_ServiceExtensions_ControllerSevicesExtension_CreateValidationProblemDetails_Microsoft_AspNetCore_Mvc_ModelBinding_ModelStateDictionary_System_String_
  commentId: M:WebsiteScreenshotService.ServiceExtensions.ControllerSevicesExtension.CreateValidationProblemDetails(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary,System.String)
  name.vb: CreateValidationProblemDetails(ModelStateDictionary, String)
  fullName: WebsiteScreenshotService.ServiceExtensions.ControllerSevicesExtension.CreateValidationProblemDetails(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary, string)
  fullName.vb: WebsiteScreenshotService.ServiceExtensions.ControllerSevicesExtension.CreateValidationProblemDetails(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary, String)
  nameWithType: ControllerSevicesExtension.CreateValidationProblemDetails(ModelStateDictionary, string)
  nameWithType.vb: ControllerSevicesExtension.CreateValidationProblemDetails(ModelStateDictionary, String)
- uid: WebsiteScreenshotService.ServiceExtensions.ControllerSevicesExtension.CreateValidationProblemDetails*
  name: CreateValidationProblemDetails
  href: api/WebsiteScreenshotService.ServiceExtensions.ControllerSevicesExtension.html#WebsiteScreenshotService_ServiceExtensions_ControllerSevicesExtension_CreateValidationProblemDetails_
  commentId: Overload:WebsiteScreenshotService.ServiceExtensions.ControllerSevicesExtension.CreateValidationProblemDetails
  isSpec: "True"
  fullName: WebsiteScreenshotService.ServiceExtensions.ControllerSevicesExtension.CreateValidationProblemDetails
  nameWithType: ControllerSevicesExtension.CreateValidationProblemDetails
- uid: WebsiteScreenshotService.ServiceExtensions.SwaggerServicesExtension
  name: SwaggerServicesExtension
  href: api/WebsiteScreenshotService.ServiceExtensions.SwaggerServicesExtension.html
  commentId: T:WebsiteScreenshotService.ServiceExtensions.SwaggerServicesExtension
  fullName: WebsiteScreenshotService.ServiceExtensions.SwaggerServicesExtension
  nameWithType: SwaggerServicesExtension
- uid: WebsiteScreenshotService.ServiceExtensions.SwaggerServicesExtension.AddSwaggerServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  name: AddSwaggerServices(IServiceCollection)
  href: api/WebsiteScreenshotService.ServiceExtensions.SwaggerServicesExtension.html#WebsiteScreenshotService_ServiceExtensions_SwaggerServicesExtension_AddSwaggerServices_Microsoft_Extensions_DependencyInjection_IServiceCollection_
  commentId: M:WebsiteScreenshotService.ServiceExtensions.SwaggerServicesExtension.AddSwaggerServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  fullName: WebsiteScreenshotService.ServiceExtensions.SwaggerServicesExtension.AddSwaggerServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  nameWithType: SwaggerServicesExtension.AddSwaggerServices(IServiceCollection)
- uid: WebsiteScreenshotService.ServiceExtensions.SwaggerServicesExtension.AddSwaggerServices*
  name: AddSwaggerServices
  href: api/WebsiteScreenshotService.ServiceExtensions.SwaggerServicesExtension.html#WebsiteScreenshotService_ServiceExtensions_SwaggerServicesExtension_AddSwaggerServices_
  commentId: Overload:WebsiteScreenshotService.ServiceExtensions.SwaggerServicesExtension.AddSwaggerServices
  isSpec: "True"
  fullName: WebsiteScreenshotService.ServiceExtensions.SwaggerServicesExtension.AddSwaggerServices
  nameWithType: SwaggerServicesExtension.AddSwaggerServices
- uid: WebsiteScreenshotService.Services
  name: WebsiteScreenshotService.Services
  href: api/WebsiteScreenshotService.Services.html
  commentId: N:WebsiteScreenshotService.Services
  fullName: WebsiteScreenshotService.Services
  nameWithType: WebsiteScreenshotService.Services
- uid: WebsiteScreenshotService.Services.BrowserService
  name: BrowserService
  href: api/WebsiteScreenshotService.Services.BrowserService.html
  commentId: T:WebsiteScreenshotService.Services.BrowserService
  fullName: WebsiteScreenshotService.Services.BrowserService
  nameWithType: BrowserService
- uid: WebsiteScreenshotService.Services.BrowserService.MakeScreenshotAsync(WebsiteScreenshotService.Model.ScreenshotOptionsModel)
  name: MakeScreenshotAsync(ScreenshotOptionsModel)
  href: api/WebsiteScreenshotService.Services.BrowserService.html#WebsiteScreenshotService_Services_BrowserService_MakeScreenshotAsync_WebsiteScreenshotService_Model_ScreenshotOptionsModel_
  commentId: M:WebsiteScreenshotService.Services.BrowserService.MakeScreenshotAsync(WebsiteScreenshotService.Model.ScreenshotOptionsModel)
  fullName: WebsiteScreenshotService.Services.BrowserService.MakeScreenshotAsync(WebsiteScreenshotService.Model.ScreenshotOptionsModel)
  nameWithType: BrowserService.MakeScreenshotAsync(ScreenshotOptionsModel)
- uid: WebsiteScreenshotService.Services.BrowserService.MakeScreenshotAsync*
  name: MakeScreenshotAsync
  href: api/WebsiteScreenshotService.Services.BrowserService.html#WebsiteScreenshotService_Services_BrowserService_MakeScreenshotAsync_
  commentId: Overload:WebsiteScreenshotService.Services.BrowserService.MakeScreenshotAsync
  isSpec: "True"
  fullName: WebsiteScreenshotService.Services.BrowserService.MakeScreenshotAsync
  nameWithType: BrowserService.MakeScreenshotAsync
- uid: WebsiteScreenshotService.Services.IBrowserService
  name: IBrowserService
  href: api/WebsiteScreenshotService.Services.IBrowserService.html
  commentId: T:WebsiteScreenshotService.Services.IBrowserService
  fullName: WebsiteScreenshotService.Services.IBrowserService
  nameWithType: IBrowserService
- uid: WebsiteScreenshotService.Services.IBrowserService.MakeScreenshotAsync(WebsiteScreenshotService.Model.ScreenshotOptionsModel)
  name: MakeScreenshotAsync(ScreenshotOptionsModel)
  href: api/WebsiteScreenshotService.Services.IBrowserService.html#WebsiteScreenshotService_Services_IBrowserService_MakeScreenshotAsync_WebsiteScreenshotService_Model_ScreenshotOptionsModel_
  commentId: M:WebsiteScreenshotService.Services.IBrowserService.MakeScreenshotAsync(WebsiteScreenshotService.Model.ScreenshotOptionsModel)
  fullName: WebsiteScreenshotService.Services.IBrowserService.MakeScreenshotAsync(WebsiteScreenshotService.Model.ScreenshotOptionsModel)
  nameWithType: IBrowserService.MakeScreenshotAsync(ScreenshotOptionsModel)
- uid: WebsiteScreenshotService.Services.IBrowserService.MakeScreenshotAsync*
  name: MakeScreenshotAsync
  href: api/WebsiteScreenshotService.Services.IBrowserService.html#WebsiteScreenshotService_Services_IBrowserService_MakeScreenshotAsync_
  commentId: Overload:WebsiteScreenshotService.Services.IBrowserService.MakeScreenshotAsync
  isSpec: "True"
  fullName: WebsiteScreenshotService.Services.IBrowserService.MakeScreenshotAsync
  nameWithType: IBrowserService.MakeScreenshotAsync
- uid: WebsiteScreenshotService.Utils
  name: WebsiteScreenshotService.Utils
  href: api/WebsiteScreenshotService.Utils.html
  commentId: N:WebsiteScreenshotService.Utils
  fullName: WebsiteScreenshotService.Utils
  nameWithType: WebsiteScreenshotService.Utils
- uid: WebsiteScreenshotService.Utils.Attributes
  name: WebsiteScreenshotService.Utils.Attributes
  href: api/WebsiteScreenshotService.Utils.Attributes.html
  commentId: N:WebsiteScreenshotService.Utils.Attributes
  fullName: WebsiteScreenshotService.Utils.Attributes
  nameWithType: WebsiteScreenshotService.Utils.Attributes
- uid: WebsiteScreenshotService.Utils.Attributes.EmptyIfAttribute`1
  name: EmptyIfAttribute<T>
  href: api/WebsiteScreenshotService.Utils.Attributes.EmptyIfAttribute-1.html
  commentId: T:WebsiteScreenshotService.Utils.Attributes.EmptyIfAttribute`1
  name.vb: EmptyIfAttribute(Of T)
  fullName: WebsiteScreenshotService.Utils.Attributes.EmptyIfAttribute<T>
  fullName.vb: WebsiteScreenshotService.Utils.Attributes.EmptyIfAttribute(Of T)
  nameWithType: EmptyIfAttribute<T>
  nameWithType.vb: EmptyIfAttribute(Of T)
- uid: WebsiteScreenshotService.Utils.Attributes.EmptyIfAttribute`1.#ctor(System.String,`0)
  name: EmptyIfAttribute(string, T)
  href: api/WebsiteScreenshotService.Utils.Attributes.EmptyIfAttribute-1.html#WebsiteScreenshotService_Utils_Attributes_EmptyIfAttribute_1__ctor_System_String__0_
  commentId: M:WebsiteScreenshotService.Utils.Attributes.EmptyIfAttribute`1.#ctor(System.String,`0)
  name.vb: New(String, T)
  fullName: WebsiteScreenshotService.Utils.Attributes.EmptyIfAttribute<T>.EmptyIfAttribute(string, T)
  fullName.vb: WebsiteScreenshotService.Utils.Attributes.EmptyIfAttribute(Of T).New(String, T)
  nameWithType: EmptyIfAttribute<T>.EmptyIfAttribute(string, T)
  nameWithType.vb: EmptyIfAttribute(Of T).New(String, T)
- uid: WebsiteScreenshotService.Utils.Attributes.EmptyIfAttribute`1.#ctor*
  name: EmptyIfAttribute
  href: api/WebsiteScreenshotService.Utils.Attributes.EmptyIfAttribute-1.html#WebsiteScreenshotService_Utils_Attributes_EmptyIfAttribute_1__ctor_
  commentId: Overload:WebsiteScreenshotService.Utils.Attributes.EmptyIfAttribute`1.#ctor
  isSpec: "True"
  name.vb: New
  fullName: WebsiteScreenshotService.Utils.Attributes.EmptyIfAttribute<T>.EmptyIfAttribute
  fullName.vb: WebsiteScreenshotService.Utils.Attributes.EmptyIfAttribute(Of T).New
  nameWithType: EmptyIfAttribute<T>.EmptyIfAttribute
  nameWithType.vb: EmptyIfAttribute(Of T).New
- uid: WebsiteScreenshotService.Utils.Attributes.EmptyIfAttribute`1.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)
  name: IsValid(object?, ValidationContext)
  href: api/WebsiteScreenshotService.Utils.Attributes.EmptyIfAttribute-1.html#WebsiteScreenshotService_Utils_Attributes_EmptyIfAttribute_1_IsValid_System_Object_System_ComponentModel_DataAnnotations_ValidationContext_
  commentId: M:WebsiteScreenshotService.Utils.Attributes.EmptyIfAttribute`1.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)
  name.vb: IsValid(Object, ValidationContext)
  fullName: WebsiteScreenshotService.Utils.Attributes.EmptyIfAttribute<T>.IsValid(object?, System.ComponentModel.DataAnnotations.ValidationContext)
  fullName.vb: WebsiteScreenshotService.Utils.Attributes.EmptyIfAttribute(Of T).IsValid(Object, System.ComponentModel.DataAnnotations.ValidationContext)
  nameWithType: EmptyIfAttribute<T>.IsValid(object?, ValidationContext)
  nameWithType.vb: EmptyIfAttribute(Of T).IsValid(Object, ValidationContext)
- uid: WebsiteScreenshotService.Utils.Attributes.EmptyIfAttribute`1.IsValid*
  name: IsValid
  href: api/WebsiteScreenshotService.Utils.Attributes.EmptyIfAttribute-1.html#WebsiteScreenshotService_Utils_Attributes_EmptyIfAttribute_1_IsValid_
  commentId: Overload:WebsiteScreenshotService.Utils.Attributes.EmptyIfAttribute`1.IsValid
  isSpec: "True"
  fullName: WebsiteScreenshotService.Utils.Attributes.EmptyIfAttribute<T>.IsValid
  fullName.vb: WebsiteScreenshotService.Utils.Attributes.EmptyIfAttribute(Of T).IsValid
  nameWithType: EmptyIfAttribute<T>.IsValid
  nameWithType.vb: EmptyIfAttribute(Of T).IsValid
- uid: WebsiteScreenshotService.Utils.Attributes.OnlyOneSpecifiedAttribute
  name: OnlyOneSpecifiedAttribute
  href: api/WebsiteScreenshotService.Utils.Attributes.OnlyOneSpecifiedAttribute.html
  commentId: T:WebsiteScreenshotService.Utils.Attributes.OnlyOneSpecifiedAttribute
  fullName: WebsiteScreenshotService.Utils.Attributes.OnlyOneSpecifiedAttribute
  nameWithType: OnlyOneSpecifiedAttribute
- uid: WebsiteScreenshotService.Utils.Attributes.OnlyOneSpecifiedAttribute.#ctor(System.String,System.Boolean)
  name: OnlyOneSpecifiedAttribute(string, bool)
  href: api/WebsiteScreenshotService.Utils.Attributes.OnlyOneSpecifiedAttribute.html#WebsiteScreenshotService_Utils_Attributes_OnlyOneSpecifiedAttribute__ctor_System_String_System_Boolean_
  commentId: M:WebsiteScreenshotService.Utils.Attributes.OnlyOneSpecifiedAttribute.#ctor(System.String,System.Boolean)
  name.vb: New(String, Boolean)
  fullName: WebsiteScreenshotService.Utils.Attributes.OnlyOneSpecifiedAttribute.OnlyOneSpecifiedAttribute(string, bool)
  fullName.vb: WebsiteScreenshotService.Utils.Attributes.OnlyOneSpecifiedAttribute.New(String, Boolean)
  nameWithType: OnlyOneSpecifiedAttribute.OnlyOneSpecifiedAttribute(string, bool)
  nameWithType.vb: OnlyOneSpecifiedAttribute.New(String, Boolean)
- uid: WebsiteScreenshotService.Utils.Attributes.OnlyOneSpecifiedAttribute.#ctor*
  name: OnlyOneSpecifiedAttribute
  href: api/WebsiteScreenshotService.Utils.Attributes.OnlyOneSpecifiedAttribute.html#WebsiteScreenshotService_Utils_Attributes_OnlyOneSpecifiedAttribute__ctor_
  commentId: Overload:WebsiteScreenshotService.Utils.Attributes.OnlyOneSpecifiedAttribute.#ctor
  isSpec: "True"
  name.vb: New
  fullName: WebsiteScreenshotService.Utils.Attributes.OnlyOneSpecifiedAttribute.OnlyOneSpecifiedAttribute
  fullName.vb: WebsiteScreenshotService.Utils.Attributes.OnlyOneSpecifiedAttribute.New
  nameWithType: OnlyOneSpecifiedAttribute.OnlyOneSpecifiedAttribute
  nameWithType.vb: OnlyOneSpecifiedAttribute.New
- uid: WebsiteScreenshotService.Utils.Attributes.OnlyOneSpecifiedAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)
  name: IsValid(object?, ValidationContext)
  href: api/WebsiteScreenshotService.Utils.Attributes.OnlyOneSpecifiedAttribute.html#WebsiteScreenshotService_Utils_Attributes_OnlyOneSpecifiedAttribute_IsValid_System_Object_System_ComponentModel_DataAnnotations_ValidationContext_
  commentId: M:WebsiteScreenshotService.Utils.Attributes.OnlyOneSpecifiedAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)
  name.vb: IsValid(Object, ValidationContext)
  fullName: WebsiteScreenshotService.Utils.Attributes.OnlyOneSpecifiedAttribute.IsValid(object?, System.ComponentModel.DataAnnotations.ValidationContext)
  fullName.vb: WebsiteScreenshotService.Utils.Attributes.OnlyOneSpecifiedAttribute.IsValid(Object, System.ComponentModel.DataAnnotations.ValidationContext)
  nameWithType: OnlyOneSpecifiedAttribute.IsValid(object?, ValidationContext)
  nameWithType.vb: OnlyOneSpecifiedAttribute.IsValid(Object, ValidationContext)
- uid: WebsiteScreenshotService.Utils.Attributes.OnlyOneSpecifiedAttribute.IsValid*
  name: IsValid
  href: api/WebsiteScreenshotService.Utils.Attributes.OnlyOneSpecifiedAttribute.html#WebsiteScreenshotService_Utils_Attributes_OnlyOneSpecifiedAttribute_IsValid_
  commentId: Overload:WebsiteScreenshotService.Utils.Attributes.OnlyOneSpecifiedAttribute.IsValid
  isSpec: "True"
  fullName: WebsiteScreenshotService.Utils.Attributes.OnlyOneSpecifiedAttribute.IsValid
  nameWithType: OnlyOneSpecifiedAttribute.IsValid
- uid: WebsiteScreenshotService.Utils.Attributes.ValidationAttributeHelper
  name: ValidationAttributeHelper
  href: api/WebsiteScreenshotService.Utils.Attributes.ValidationAttributeHelper.html
  commentId: T:WebsiteScreenshotService.Utils.Attributes.ValidationAttributeHelper
  fullName: WebsiteScreenshotService.Utils.Attributes.ValidationAttributeHelper
  nameWithType: ValidationAttributeHelper
- uid: WebsiteScreenshotService.Utils.Attributes.ValidationAttributeHelper.IsUnset(System.Object)
  name: IsUnset(object?)
  href: api/WebsiteScreenshotService.Utils.Attributes.ValidationAttributeHelper.html#WebsiteScreenshotService_Utils_Attributes_ValidationAttributeHelper_IsUnset_System_Object_
  commentId: M:WebsiteScreenshotService.Utils.Attributes.ValidationAttributeHelper.IsUnset(System.Object)
  name.vb: IsUnset(Object)
  fullName: WebsiteScreenshotService.Utils.Attributes.ValidationAttributeHelper.IsUnset(object?)
  fullName.vb: WebsiteScreenshotService.Utils.Attributes.ValidationAttributeHelper.IsUnset(Object)
  nameWithType: ValidationAttributeHelper.IsUnset(object?)
  nameWithType.vb: ValidationAttributeHelper.IsUnset(Object)
- uid: WebsiteScreenshotService.Utils.Attributes.ValidationAttributeHelper.IsUnset*
  name: IsUnset
  href: api/WebsiteScreenshotService.Utils.Attributes.ValidationAttributeHelper.html#WebsiteScreenshotService_Utils_Attributes_ValidationAttributeHelper_IsUnset_
  commentId: Overload:WebsiteScreenshotService.Utils.Attributes.ValidationAttributeHelper.IsUnset
  isSpec: "True"
  fullName: WebsiteScreenshotService.Utils.Attributes.ValidationAttributeHelper.IsUnset
  nameWithType: ValidationAttributeHelper.IsUnset
- uid: WebsiteScreenshotService.Utils.LazyAsync`1
  name: LazyAsync<T>
  href: api/WebsiteScreenshotService.Utils.LazyAsync-1.html
  commentId: T:WebsiteScreenshotService.Utils.LazyAsync`1
  name.vb: LazyAsync(Of T)
  fullName: WebsiteScreenshotService.Utils.LazyAsync<T>
  fullName.vb: WebsiteScreenshotService.Utils.LazyAsync(Of T)
  nameWithType: LazyAsync<T>
  nameWithType.vb: LazyAsync(Of T)
- uid: WebsiteScreenshotService.Utils.LazyAsync`1.#ctor(System.Func{System.Threading.Tasks.Task{`0}})
  name: LazyAsync(Func<Task<T>>)
  href: api/WebsiteScreenshotService.Utils.LazyAsync-1.html#WebsiteScreenshotService_Utils_LazyAsync_1__ctor_System_Func_System_Threading_Tasks_Task__0___
  commentId: M:WebsiteScreenshotService.Utils.LazyAsync`1.#ctor(System.Func{System.Threading.Tasks.Task{`0}})
  name.vb: New(Func(Of Task(Of T)))
  fullName: WebsiteScreenshotService.Utils.LazyAsync<T>.LazyAsync(System.Func<System.Threading.Tasks.Task<T>>)
  fullName.vb: WebsiteScreenshotService.Utils.LazyAsync(Of T).New(System.Func(Of System.Threading.Tasks.Task(Of T)))
  nameWithType: LazyAsync<T>.LazyAsync(Func<Task<T>>)
  nameWithType.vb: LazyAsync(Of T).New(Func(Of Task(Of T)))
- uid: WebsiteScreenshotService.Utils.LazyAsync`1.#ctor*
  name: LazyAsync
  href: api/WebsiteScreenshotService.Utils.LazyAsync-1.html#WebsiteScreenshotService_Utils_LazyAsync_1__ctor_
  commentId: Overload:WebsiteScreenshotService.Utils.LazyAsync`1.#ctor
  isSpec: "True"
  name.vb: New
  fullName: WebsiteScreenshotService.Utils.LazyAsync<T>.LazyAsync
  fullName.vb: WebsiteScreenshotService.Utils.LazyAsync(Of T).New
  nameWithType: LazyAsync<T>.LazyAsync
  nameWithType.vb: LazyAsync(Of T).New
- uid: WebsiteScreenshotService.Utils.LazyAsync`1.GetValueAsync
  name: GetValueAsync()
  href: api/WebsiteScreenshotService.Utils.LazyAsync-1.html#WebsiteScreenshotService_Utils_LazyAsync_1_GetValueAsync
  commentId: M:WebsiteScreenshotService.Utils.LazyAsync`1.GetValueAsync
  fullName: WebsiteScreenshotService.Utils.LazyAsync<T>.GetValueAsync()
  fullName.vb: WebsiteScreenshotService.Utils.LazyAsync(Of T).GetValueAsync()
  nameWithType: LazyAsync<T>.GetValueAsync()
  nameWithType.vb: LazyAsync(Of T).GetValueAsync()
- uid: WebsiteScreenshotService.Utils.LazyAsync`1.GetValueAsync*
  name: GetValueAsync
  href: api/WebsiteScreenshotService.Utils.LazyAsync-1.html#WebsiteScreenshotService_Utils_LazyAsync_1_GetValueAsync_
  commentId: Overload:WebsiteScreenshotService.Utils.LazyAsync`1.GetValueAsync
  isSpec: "True"
  fullName: WebsiteScreenshotService.Utils.LazyAsync<T>.GetValueAsync
  fullName.vb: WebsiteScreenshotService.Utils.LazyAsync(Of T).GetValueAsync
  nameWithType: LazyAsync<T>.GetValueAsync
  nameWithType.vb: LazyAsync(Of T).GetValueAsync
