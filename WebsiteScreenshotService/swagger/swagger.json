{
  "openapi": "3.0.1",
  "info": {
    "title": "Screenshot API",
    "description": "Api for making screenshot of a website",
    "contact": {
      "name": "Ivan Pohoidash",
      "url": "https://github.com/haveve"
    },
    "license": {
      "name": "Licence",
      "url": "https://github.com/haveve/WebstoreScreenshotService/blob/main/LICENSE"
    },
    "version": "v1"
  },
  "paths": {
    "/Identity/GetUserInfo": {
      "get": {
        "tags": [
          "Identity"
        ],
        "summary": "Retrieves the information of the currently authenticated user.",
        "responses": {
          "200": {
            "description": "Returns the UserModel or null if used is not authorized or user does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserModel"
                }
              }
            }
          }
        }
      }
    },
    "/Identity/Login": {
      "post": {
        "tags": [
          "Identity"
        ],
        "summary": "Logs in a user using their email and password.",
        "requestBody": {
          "description": "The login details containing email and password.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LoginModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns the UserModel if login is successful.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserModel"
                }
              }
            }
          },
          "400": {
            "description": "User doesn't exist or invalid credentials or Input data is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation Error": {
                    "value": "{\"type\":\"https://datatracker.ietf.org/doc/html/rfc9110#name-400-bad-request\",\"title\":\"One or more model validation errors occurred.\",\"status\":400,\"detail\":\"See the errors property for details\",\"instance\":\"Identity/Login\",\"errors\":{},\"traceId\":\"afe3f12c-9e07-4e6f-a46b-4e316a560ab0\"}"
                  },
                  "User doesn't exist": {
                    "value": "User doesn't exist"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Identity/Register": {
      "post": {
        "tags": [
          "Identity"
        ],
        "summary": "Registers a new user with the provided registration details.",
        "requestBody": {
          "description": "The registration details containing email, password, etc.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful registration of the user.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserModel"
                }
              }
            }
          },
          "400": {
            "description": "User with that email already exists or Input data is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation Error": {
                    "value": "{\"type\":\"https://datatracker.ietf.org/doc/html/rfc9110#name-400-bad-request\",\"title\":\"One or more model validation errors occurred.\",\"status\":400,\"detail\":\"See the errors property for details\",\"instance\":\"Identity/Register\",\"errors\":{},\"traceId\":\"4e57b16f-14a7-4295-9912-efe70b30b3e8\"}"
                  },
                  "User already exists": {
                    "value": "User with that email already exist"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Identity/Logout": {
      "get": {
        "tags": [
          "Identity"
        ],
        "summary": "Logs out the current user by signing them out of the system.",
        "responses": {
          "200": {
            "description": "Successful logout."
          }
        }
      }
    },
    "/MakeScreenshot": {
      "post": {
        "tags": [
          "ScreenshotContoller"
        ],
        "summary": "Captures a screenshot based on the specified options and returns the image file.",
        "requestBody": {
          "description": "The options for the screenshot such as the URL, dimensions, etc.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScreenshotOptionsModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ScreenshotOptionsModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ScreenshotOptionsModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns the screenshot image file.",
            "content": {
              "image/png": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "image/webp": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "image/jpeg": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "User does not exist or has exceeded their available screenshots limit or Input data is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                },
                "examples": {
                  "Validation Error": {
                    "value": "{\"type\":\"https://datatracker.ietf.org/doc/html/rfc9110#name-400-bad-request\",\"title\":\"One or more model validation errors occurred.\",\"status\":400,\"detail\":\"See the errors property for details\",\"instance\":\"/MakeScreenshot\",\"errors\":{},\"traceId\":\"9dddeb24-2aee-42b3-ab56-db8ee8e72825\"}"
                  },
                  "User doesn't exist": {
                    "value": "User doesn't exist"
                  },
                  "Limit of available screenshots exceeded": {
                    "value": "You cannot make screenshot any more because you ran out of avaialbe screenshots"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ClipModel": {
        "type": "object",
        "properties": {
          "x": {
            "maximum": 10000,
            "minimum": 1,
            "type": "integer",
            "description": "Gets or sets the x coordinate of the element in pixels.",
            "format": "int32"
          },
          "y": {
            "maximum": 10000,
            "minimum": 1,
            "type": "integer",
            "description": "Gets or sets the y coordinate of the element in pixels.",
            "format": "int32"
          },
          "width": {
            "maximum": 10000,
            "minimum": 1,
            "type": "integer",
            "description": "Gets or sets the width of the element in pixels.",
            "format": "int32"
          },
          "height": {
            "maximum": 10000,
            "minimum": 1,
            "type": "integer",
            "description": "Gets or sets the height of the element in pixels.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Represents a rectangular region of a webpage to capture in a screenshot."
      },
      "LoginModel": {
        "required": [
          "email",
          "password"
        ],
        "type": "object",
        "properties": {
          "email": {
            "minLength": 1,
            "type": "string",
            "description": "Gets or sets the email address of the user.",
            "format": "email"
          },
          "password": {
            "minLength": 1,
            "type": "string",
            "description": "Gets or sets the password of the user."
          }
        },
        "additionalProperties": false,
        "description": "Represents the model for user login."
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": {}
      },
      "RegisterModel": {
        "required": [
          "email",
          "name",
          "password",
          "surname"
        ],
        "type": "object",
        "properties": {
          "email": {
            "minLength": 1,
            "type": "string",
            "description": "Gets or sets the email address of the user.",
            "format": "email"
          },
          "password": {
            "minLength": 1,
            "type": "string",
            "description": "Gets or sets the password of the user."
          },
          "surname": {
            "minLength": 1,
            "type": "string",
            "description": "Gets or sets the surname of the user."
          },
          "name": {
            "minLength": 1,
            "type": "string",
            "description": "Gets or sets the first name of the user."
          }
        },
        "additionalProperties": false,
        "description": "Represents the model for user registration."
      },
      "ScreenshotOptionsModel": {
        "required": [
          "url"
        ],
        "type": "object",
        "properties": {
          "url": {
            "minLength": 1,
            "type": "string",
            "description": "Gets or sets the URL of the webpage to capture.",
            "format": "uri"
          },
          "screenshotType": {
            "enum": [
              "Jpeg",
              "Png",
              "Webp"
            ],
            "type": "string",
            "description": "Gets or sets the type of screenshot to capture (e.g., PNG, JPEG).",
            "default": "Png"
          },
          "quality": {
            "maximum": 100,
            "minimum": 0,
            "type": "integer",
            "description": "Gets or sets the quality of the screenshot if the type is JPEG. Ignored for PNG.",
            "format": "int32",
            "nullable": true
          },
          "fullScreen": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether to capture the full screen. Cannot be specified with Clip.",
            "nullable": true
          },
          "clip": {
            "$ref": "#/components/schemas/ClipModel"
          }
        },
        "additionalProperties": false,
        "description": "Represents the options for taking a screenshot."
      },
      "SubscriptionPlan": {
        "type": "object",
        "properties": {
          "type": {
            "enum": [
              1
            ],
            "type": "integer",
            "description": "The type of the subscription plan.",
            "format": "int32"
          },
          "screenshotLeft": {
            "type": "integer",
            "description": "Gets the number of screenshots left in the subscription plan.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Represents a subscription plan with a type and the number of screenshots left."
      },
      "UserModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The first name of the user.",
            "nullable": true
          },
          "surname": {
            "type": "string",
            "description": "The surname of the user.",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "The email address of the user.",
            "nullable": true
          },
          "subscriptionPlan": {
            "$ref": "#/components/schemas/SubscriptionPlan"
          }
        },
        "additionalProperties": false,
        "description": "Represents a user model with basic user information and subscription plan details."
      },
      "ValidationProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "nullable": true
          }
        },
        "additionalProperties": {}
      }
    }
  }
}